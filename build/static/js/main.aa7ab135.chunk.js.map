{"version":3,"sources":["components/customBtn.js","SOM2.png","logo.png","components/navBar.js","components/slideCalendar.js","components/slideMessage.js","components/form/NameInput.js","components/form/EventDetailsInput.js","components/form/RoomSelection.js","components/form/TimeInput.js","components/form/GearCheckOut.js","components/form/CourseInput.js","components/form/FormActions.js","components/form/EventID.js","components/form/Submit.js","pages/home.js","components/slideCalendarRec.js","components/slideCalendarReh.js","components/slideCalendarCollab.js","components/slideMessageRec.js","components/slideMessageReh.js","components/slideMessageCollab.js","pages/schedules.js","components/form/IndividualNameInput.js","components/form/IndividualTimeInput.js","components/form/IndividualGearCheckOut.js","components/form/IndividualSubmit.js","pages/gear.js","components/slideMessageContact.js","pages/contact.js","App.js","reportWebVitals.js","index.js"],"names":["StyledButton","withStyles","root","width","display","alignItems","justifyContent","height","padding","boxSizing","borderRadius","background","color","fontWeight","fontSize","transform","boxShadow","transition","backgroundColor","label","textTransform","Button","CustomBtn","props","variant","txt","styles","makeStyles","bar","paddingTop","flexDirection","logo","logoMobile","menuItem","cursor","flexGrow","paddingBottom","NavBar","classes","className","Box","sx","Grid","container","spacing","columns","item","xs","m","href","src","exact","to","style","textDecoration","activeClassName","noteStyle","embedStyle","border","SlideCalendar","slideStyle","useSpring","from","opacity","marginRight","div","maxWidth","class","frameborder","sandbox","loading","onmousewheel","SlideMessage","marginLeft","textAlign","fontStyle","lineHeight","base","require","apiKey","userValues","emojis","userEmoji","userNameList","renderItem","handleRemoveName","emoji","indexOf","ListItem","secondaryAction","IconButton","edge","title","onClick","ListItemText","primary","gearList","lendLevel","filterGear","some","element","gearAccess","select","view","eachPage","records","fetchNextPage","forEach","record","push","name","get","id","eventStart","eventEnd","eventStatus","err","console","error","filterRoomType","disabled","roomAccess","filter","createFilterOptions","NameInput","userEventTitle","userEventType","userEventUsage","userFacultyInput","peopleAllInfo","userSelected","setUserSelected","setUserCount","setDisabledRoomTypes","setGearList","React","open","setOpen","setError","value","setValue","slice","nameInDisplay","setNameInDisplay","log","prev","i","splice","user","length","handleClose","event","reason","nameInputDialog","Dialog","disableEscapeKeyDown","onClose","DialogTitle","DialogContent","Stack","Autocomplete","onChange","newValue","randomEmoji","Math","floor","random","filterOptions","options","params","selectOnFocus","clearOnBlur","handleHomeEndKeys","getOptionLabel","option","renderOption","freeSolo","renderInput","mr","my","TextField","helperText","size","DialogActions","Paper","mt","List","TransitionGroup","map","Collapse","Divider","icon","checkedIcon","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","eventTypes","eventUsages","getStyles","type","eventType","theme","typography","fontWeightRegular","fontWeightMedium","EventDetailsInput","facultyList","setSessionTitle","setEventTypeSelected","setFacultySelected","setUsageSelected","useTheme","setEventType","eventUsage","setEventUsage","setTitle","isProject","setIsProject","faculty","setFaculty","FacultySelection","FormControl","multiple","disableCloseOnSelect","selected","Checkbox","checked","pink","component","noValidate","autoComplete","target","InputLabel","Select","labelId","split","input","OutlinedInput","renderValue","flexWrap","gap","Chip","MenuItem","Fade","in","usage","userRoomType","useStyles","formControl","margin","minWidth","inputLabel","inputFocused","borderColor","outlinedInput","roomTypes","roomOptionsAllInfo","roomSelectedAllInfo","eventsList","RoomSelectionInput","roomOptionStudio","roomOptionRehearsal","roomOptionECspace","disabledRoomTypes","setRoomTypeSelected","setRoomSelected","setRoomBookingRecord","roomBookingRecord","roomType","setRoomType","room","setRoom","isStudio","setIsStudio","isRehearsal","setIsRehearsal","isECspace","setIsECspace","handleChangeRoom","valueLength","roomOptionsLength","x","roomSelectedAllInfoLength","j","find","key","handleDelete","e","preventDefault","current","_without","roomSelectionStudio","onDelete","onMouseDown","stopPropagation","roomSelectionRehearsal","roomSelectionECspace","StartTime","EndTime","unavailableRoom","ISODateString","d","pad","n","getHours","getUTCFullYear","getUTCMonth","getDate","getUTCMinutes","Add5Hours","time","newTime","Date","setDate","setHours","toISOString","Alert","ref","elevation","horizontal","DateTimeValidation","setTimeCorrect","setStartTimeSelected","setEndTimeSelected","startValue","setSartValue","endValue","setEndValue","invalidTime","setInvalidTime","invalidFormat","setInvalidFormat","roomUnavailable","setRoomUnavailable","successMsg","setSuccessMsg","handleFakeClose","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","clearable","placeholder","minDate","minTime","maxTime","minTimeMessage","maxTimeMessage","realEndTime","conflictFound","Snackbar","autoHideDuration","anchorOrigin","vertical","severity","userGear","unavailableGear","iFrameGear","sleep","delay","Promise","resolve","setTimeout","GearCheckOut","setGearSelected","addGear","setAddGear","startTimeSelected","endTimeSelected","gear","setGear","setOptions","gearUnavailable","setGearUnavailable","active","a","gearInput","onOpen","gears","availabilityCheck","InputProps","endAdornment","CircularProgress","fontFamily","FormLabel","FormControlLabel","control","userCourse","courseList","CourseSelectionInput","setCourseSelected","addCourse","setAddCourse","course","setCourse","courseInput","ActionButton","styled","FormActions","setNewEvent","setUpdateEvent","setCancelEvent","setEventID","setIDError","setGoodID","startIcon","position","top","left","bgcolor","outline","p","Transition","Slide","direction","EventID","IDerror","eventID","goodID","updateEvent","CancelEvent","openCancelDialog","setOpenCancelDialog","openCancelSuccess","setOpenCancelSuccess","handleCloseCancelDialog","confirmCancelDialog","TransitionComponent","keepMounted","DialogContentText","update","UpdateRecord","succesCancellation","Modal","Typography","SubmitButton","Submit","sessionTitle","eventTypeSelected","facultySelected","usageSelected","roomTypeSelected","roomSelected","courseSelected","gearSelected","newEvent","timeCorrect","users","faculties","courses","locations","obj","create","getId","CreateRecord","window","location","reload","SMCpeople","RecordingStudioRoomsList","RehearsalRoomsList","ECRoomsList","includes","events","Home","useState","userCount","nameInput","mx","eventDetailsInput","roomInput","timeInput","SMChours","ml","formActions","requestEventID","Grow","SlideCalendarRec","SlideCalendarCollab","SlideMessageRec","SlideMessageReh","SlideMessageCollab","schedules","EndTimeCheck","CreateEventRecord","Gear","IndividualNameInput","SlideMessageContact","FadeInSection","isVisible","setVisible","domRef","useRef","useEffect","IntersectionObserver","entries","entry","isIntersecting","observe","children","Fades","createTheme","palette","default","main","secondary","h4","h5","overrides","MuiCssBaseline","body","backgroundImage","App","ThemeProvider","CssBaseline","path","home","contact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa7ab135.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Button} from '@material-ui/core'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        width: '230px',\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"44px\",\r\n        padding: \"0 25px\",\r\n        boxSizing: \"border-box\",\r\n        borderRadius: 0, \r\n        background: \"#000000\",\r\n        color: \"#cccdcf\",\r\n        fontWeight: \"Condensed Heavy\",\r\n        fontSize: \"130%\",\r\n        transform: \"none\",\r\n        boxShadow: \"2px 2px 0 0 black\",\r\n        transition: \"background 0.5s,border-color .2s,color 0.2s\",\r\n        \"&:hover\": {\r\n            backgroundColor:  \"#CFB991\"\r\n          },\r\n    },\r\n    label: {\r\n      textTransform: 'capitalize',\r\n    },\r\n  })(Button);\r\n\r\nfunction CustomBtn(props) {\r\n    return (\r\n        \r\n            <StyledButton variant=\"contained\"> {props.txt} </StyledButton>\r\n        \r\n    )\r\n}\r\n//test\r\nexport default CustomBtn\r\n","export default __webpack_public_path__ + \"static/media/SOM2.fbd55c1a.png\";","export default __webpack_public_path__ + \"static/media/logo.848b9dc9.png\";","import React from 'react'\r\nimport CustomBtn from './customBtn'\r\nimport logo from '../SOM2.png'\r\nimport logoMobile from'../logo.png'\r\nimport {Toolbar, Typography} from '@material-ui/core'\r\nimport {makeStyles} from \"@material-ui/core/styles\"; \r\nimport { NavLink } from 'react-router-dom';\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst styles = makeStyles({\r\n    bar:{\r\n        paddingTop: \"0.40rem\",\r\n        backgroundColor: \"#000000\",\r\n        ['@media (max-width:780px)']: { \r\n           flexDirection: \"column\"\r\n          }\r\n    },\r\n    logo: {\r\n        width: \"100%\", \r\n        ['@media (max-width:780px)']: { \r\n           display: \"none\"\r\n           }\r\n    },\r\n    logoMobile:{\r\n        width: \"100%\", \r\n        display: \"none\", \r\n        ['@media (max-width:780px)']: { \r\n            display: \"inline-block\"\r\n            }\r\n    },\r\n    menuItem: {\r\n        cursor: \"pointer\", \r\n        flexGrow: 1,\r\n        \"&:hover\": {\r\n            color:  \"#CFB991\"\r\n        },\r\n        ['@media (max-width:780px)']: { \r\n            paddingBottom: \"1rem\"    }\r\n    }\r\n})\r\n\r\nfunction NavBar() {\r\n    const classes = styles()\r\n    return (\r\n        <div color=\"rgba(0, 0, 0, 0.87)\" className={classes.bar}>\r\n        <Box sx={{ width: \"90%\",  flexGrow: 2 }}>\r\n        <Grid container spacing={0} columns={16} justifyContent=\"space-between\" alignItems=\"center\">\r\n\r\n        <Grid item xs=\"auto\">\r\n            <Box sx={{ m: 3,  flexGrow: 1 }}>\r\n            <a href=\"https://pfw-smc.notion.site/pfw-smc/PFW-Sweetwater-Music-Center-17d134f1dd704a56909044ddb24d61ed\">\r\n                <img src={logo} /> \r\n            </a>\r\n            </Box>\r\n        </Grid>      \r\n        \r\n        <Grid item xs>\r\n            <Box sx={{ m: 2,  flexGrow: 1 }}>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\" columns={15}>\r\n\r\n            <Grid item xs=\"auto\">\r\n            <NavLink exact to='/' style={{ textDecoration: 'none' }} className=\"main-nav\" activeClassName=\"main-nav-active\">\r\n                <CustomBtn txt=\"Book Rooms\"/>                   \r\n            </NavLink>\r\n            </Grid>\r\n\r\n            <Grid item xs=\"auto\">\r\n            <NavLink to='/schedules' style={{ textDecoration: 'none' }} className=\"main-nav\" activeClassName=\"main-nav-active\" >\r\n                <CustomBtn txt=\"Room Schedules\"/>\r\n            </NavLink>\r\n            </Grid>\r\n\r\n            <Grid item xs=\"auto\">\r\n            <NavLink to='/gear' style={{ textDecoration: 'none' }} className=\"main-nav\" activeClassName=\"main-nav-active\">\r\n                <CustomBtn txt=\"Gear Checkout\"/>\r\n            </NavLink>\r\n            </Grid>  \r\n\r\n            <Grid item xs=\"auto\">\r\n            <NavLink to='/contact' style={{ textDecoration: 'none' }} className=\"main-nav\" activeClassName=\"main-nav-active\">\r\n                <CustomBtn txt=\"Contact Us\"/>\r\n            </NavLink>\r\n            </Grid>  \r\n                     \r\n            </Grid>\r\n            </Box> \r\n        </Grid>\r\n        \r\n          \r\n        </Grid>\r\n        </Box> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst noteStyle = {\r\n    background: '#e7dcc8',\r\n    color: 'white',\r\n    padding: '1.5rem'\r\n}\r\n\r\nconst embedStyle = {\r\n    background: \"transparent\",\r\n    border: \"\"\r\n    \r\n  };\r\n\r\nfunction SlideCalendar() {\r\n\r\n    const slideStyle = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            marginRight:-500\r\n        },\r\n        to:{\r\n            opacity: 1,\r\n            marginRight:0\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n    <animated.div style={slideStyle}>\r\n        <div style={noteStyle}>\r\n            <br></br>\r\n            <Box m=\"auto\" sx={{ maxWidth: 900, width: \"90%\"}}>\r\n            <iframe class=\"airtable-embed\" \r\n                src=\"https://airtable.com/embed/shr7XfOauvLgRzajc?backgroundColor=red\"\r\n                frameborder=\"0\"\r\n                sandbox=\"allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin\"\r\n                loading=\"lazy\"\r\n                onmousewheel=\"\"\r\n                width=\"100%\" \r\n                height=\"533\"\r\n                style={embedStyle}\r\n            />\r\n            </Box>\r\n        </div>\r\n    </animated.div>\r\n    )\r\n}\r\n\r\nexport default SlideCalendar\r\n","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst noteStyle = {\r\n    background: '#CFB991',\r\n    color: '#3b3e43',\r\n    padding: '1.5rem'\r\n}\r\n\r\nfunction SlideMessage() {\r\n\r\n    const slideStyle = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            marginLeft:-500\r\n        },\r\n        to:{\r\n            opacity: 1,\r\n            marginLeft:0\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n    <animated.div style={slideStyle}>\r\n        <div style={noteStyle}>\r\n            <h1>\r\n                Schedule SMC Events\r\n            </h1>\r\n            <Box\r\n            sx={{\r\n              textAlign: \"left\",\r\n              m: \"auto\",\r\n              fontSize: 16,\r\n              fontStyle: 'italic',\r\n              fontWeight: \"Light\",\r\n              lineHeight: 1.3,\r\n              width: \"80%\"\r\n            }}\r\n            >\r\n            Everyone can take advantage of scheduling time in the edit & collaboration spaces in the SMC building.  Approved students registered for certain classes have privileges to schedule time in the recording studio, rehearsal room and control room.\r\n         \r\n            </Box>\r\n        </div>\r\n    </animated.div>\r\n    </Grid>\r\n           \r\n    )\r\n}\r\n\r\nexport default SlideMessage\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\r\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\n\r\n\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: 'keyGJts1v9eIz3Dki'}).base('appqapwXvgL64Efox');\r\n//({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx'); // real base\r\n\r\n// This will be used to store input data\r\nvar userValues = [];\r\n\r\nvar emojis = [\r\n  \"🎹\",\r\n  \"😃\",\r\n  \"😀\",\r\n  \"😊\",\r\n  \"😉\",\r\n  \"😍\",\r\n  \"😘\",\r\n  \"📯\",\r\n  \"🪕\",\r\n  \"😙\",\r\n  \"😜\",\r\n  \"😝\",\r\n  \"😛\",\r\n  \"🎵\",\r\n  \"🎺\",\r\n  \"🥁\",\r\n  \"🎻\",\r\n  \"🎷\",\r\n  \"😂\",\r\n  \"🎸\",\r\n  \"😪\",\r\n  \"😋\",\r\n  \"😷\",\r\n  \"😎\",\r\n  \"😴\",\r\n  \"😵\",\r\n  \"😲\",\r\n  \"😈\"\r\n];\r\n\r\nconst userEmoji = [];\r\nconst userNameList = [];\r\n\r\n\r\nfunction renderItem({ item, handleRemoveName }) {\r\n  const emoji = userEmoji[userNameList.indexOf(item)];\r\n\r\n  return (\r\n    <ListItem\r\n      secondaryAction={\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"delete\"\r\n          title=\"Delete\"\r\n          onClick={() => handleRemoveName(item)}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <ListItemText primary={emoji + \" \" + item} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nvar gearList = [];    //store list of gear available to user\r\nvar lendLevel = \"\";      //store determined lending level\r\n\r\n////////////////////// Filtering gears accessible using API data\r\nfunction filterGear(){\r\n  \r\n  \r\n  if (userValues.some(element => element.gearAccess === 'Gear Level 4')) {\r\n    lendLevel = \"Lending Level 4\"; \r\n  }\r\n\r\n  else if (userValues.some(element => element.gearAccess === 'Gear Level 3')){\r\n    lendLevel = \"Lending Level 3\";\r\n  }\r\n  else if (userValues.some(element => element.gearAccess === 'Gear Level 2')){\r\n    lendLevel = \"Lending Level 2\";\r\n  }\r\n  else if (userValues.some(element => element.gearAccess === 'Gear Level 1')){\r\n    lendLevel = \"Lending Level 1\";\r\n  }\r\n  //CASE: User has no lendLevel (staff) RETURN: Empty gearList for selection options\r\n  else{ \r\n    \r\n    return gearList;\r\n  }\r\n\r\n  //API call to appropriate view on Airtable. View called depends on \"lendLevel\" determined above. \r\n\r\n    base('Gear').select({\r\n      view: lendLevel\r\n    }).eachPage(function page(records, fetchNextPage) {\r\n      // This function (`page`) will get called for each page of records.\r\n  \r\n      records.forEach(function(record) {\r\n          //console.log('Retrieved', record.get('Item'), record);\r\n          gearList.push({\r\n            name: record.get('Item'), \r\n            id: record.id, \r\n            eventStart: record.get('Start Time (from Events)'),\r\n            eventEnd: record.get('End Time (from Events)'),\r\n            eventStatus: record.get('Status (from Events)')\r\n          })\r\n      });\r\n  \r\n      // To fetch the next page of records, call `fetchNextPage`.\r\n      // If there are more records, `page` will get called again.\r\n      // If there are no more records, `done` will get called.\r\n      fetchNextPage();\r\n  \r\n  }, function done(err) {\r\n      if (err) { console.error(err); return; }\r\n  });\r\n\r\n  return gearList;\r\n  \r\n}\r\n\r\n\r\nvar roomTypes;\r\n\r\n////////////////////// Filtering gears using API data\r\nfunction filterRoomType(disabled) {\r\n  \r\n  if (userValues.some(element => element.roomAccess === 'Room Access 3')) {\r\n    disabled = [];\r\n  }\r\n  else if (userValues.some(element => element.roomAccess === 'Room Access 2')){\r\n    disabled = [\"Recording Studio 🎙️\"];\r\n  }\r\n  else if (userValues.some(element => element.roomAccess === 'Room Access 1')){\r\n    disabled = [\r\n      \"Recording Studio 🎙️\",\r\n      \"Rehearsal Spaces 🎧\"\r\n    ];\r\n  }\r\n  else{\r\n    // roomTypes[] remains empty as the user has no access levels\r\n    disabled = [\r\n      \"Recording Studio 🎙️\",\r\n      \"Rehearsal Spaces 🎧\",\r\n      \"Edit & Collaboration Spaces 🎒\"\r\n   ];\r\n  }\r\n  return disabled;\r\n}\r\n\r\n\r\nconst filter = createFilterOptions();\r\n\r\nfunction NameInput({peopleAllInfo, userSelected, setUserSelected, setUserCount, setDisabledRoomTypes, setGearList}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = React.useState(false);\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const [nameInDisplay, setNameInDisplay] = React.useState(\r\n    userNameList.slice(0, 3)\r\n  );\r\n\r\n  const Initilize = () => {\r\n    if (!userSelected) userNameList = [];\r\n  }\r\n\r\n  const handleAddName = () => {\r\n    setNameInDisplay(userNameList);\r\n  };\r\n\r\n  const handleRemoveName = (item) => {\r\n    console.log(item);\r\n    setNameInDisplay((prev) => [...prev.filter((i) => i !== item)]);\r\n    userNameList.splice(userNameList.indexOf(item), 1);\r\n    userValues = userValues.filter((user) => user.name !== item);\r\n\r\n    setUserCount(userNameList.length); // send data to home\r\n    setUserSelected(userValues);\r\n    setDisabledRoomTypes(filterRoomType(roomTypes));\r\n    setGearList(filterGear());\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== \"backdropClick\") {\r\n      setOpen(false);\r\n      setValue(null);\r\n      setError(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    if (typeof newValue === \"string\") {\r\n      setValue({\r\n        title: newValue\r\n      });\r\n    } else {\r\n      setValue(newValue);\r\n    }\r\n    if (newValue != null) {\r\n      if (userNameList.indexOf(newValue.name) > -1) {\r\n        console.log(userNameList.indexOf(newValue));\r\n        setError(true);\r\n      } else {\r\n        setError(false);\r\n        const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];\r\n        userEmoji.push(randomEmoji);\r\n        handleClose();\r\n        userValues.push(newValue);\r\n        userNameList.push(newValue.name);\r\n\r\n        setUserCount(userNameList.length); // send data to home \r\n        setUserSelected(userValues);\r\n        setDisabledRoomTypes(filterRoomType(roomTypes));\r\n        setGearList(filterGear());\r\n\r\n        handleAddName();\r\n      }\r\n  }\r\n  };\r\n\r\n  const nameInputDialog = (\r\n    <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n      <DialogTitle>Find your name</DialogTitle>\r\n      <DialogContent>\r\n        <Stack spacing={0} sx={{ width: 480 }}>\r\n          <Autocomplete\r\n            value={value}\r\n            onChange={handleChange}\r\n            filterOptions={(options, params) => {\r\n              const filtered = filter(options, params);\r\n              return filtered;\r\n            }}\r\n            selectOnFocus\r\n            clearOnBlur={true}\r\n            handleHomeEndKeys\r\n            id=\"Search-for-name\"\r\n            options={peopleAllInfo}\r\n            getOptionLabel={(option) => {\r\n              if (typeof option === \"string\") {\r\n                // Value selected with enter, right from the input\r\n                return option;\r\n              } else return option.name; // Regular option\r\n            }}\r\n            renderOption={(props, option) => <li {...props}>{option.name}</li>}\r\n            sx={{ width: 450 }}\r\n            freeSolo\r\n            renderInput={(params) => (\r\n              <div>\r\n                <Box sx={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  <SearchRoundedIcon\r\n                    sx={{ color: \"action.active\", mr: 1, my: 3.5 }}\r\n                  />\r\n                  {error && (\r\n                    <TextField\r\n                      {...params}\r\n                      error\r\n                      id=\"error\"\r\n                      label=\"Error\"\r\n                      helperText=\"This user has already been added\"\r\n                      size=\"small\"\r\n                      variant=\"standard\"\r\n                    />\r\n                  )}\r\n                  {!error && (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Search for name\"\r\n                      helperText=\"Please enter your name here :)\"\r\n                      size=\"small\"\r\n                      variant=\"standard\"\r\n                    />\r\n                  )}\r\n                </Box>\r\n              </div>\r\n            )}\r\n          />\r\n        </Stack>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {Initilize}\r\n      <Box sx={{textAlign: \"left\", m: 2}}>\r\n        <Button variant=\"contained\" onClick={handleClickOpen}>\r\n          +ADD\r\n        </Button>\r\n      </Box>\r\n      {nameInputDialog}\r\n      {userNameList.length !== 0 && (\r\n        <Paper variant=\"outlined\" sx={{ mt: 2, boxShadow: 1 }}>\r\n          <Paper  />\r\n          <List>\r\n            <TransitionGroup>\r\n              {nameInDisplay.map((item) => (\r\n                <Collapse key={item}>\r\n                  {(userNameList.indexOf(item) !== 0) && <Divider />}\r\n                  {renderItem({ item, handleRemoveName })}\r\n                </Collapse>\r\n              ))}\r\n            </TransitionGroup>\r\n          </List>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NameInput;\r\n\r\n","import * as React from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\nimport Fade from \"@mui/material/Fade\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\n// This will be used to store input data\r\nvar userEventTitle;\r\nvar userEventType;\r\nvar userEventUsage;\r\nvar userFacultyInput;\r\n\r\nconst eventTypes = [\r\n  \"Summer Booking 🏖\",\r\n  \"Recording Session 🎙\",\r\n  \"Student Project 🎬\",\r\n  \"Class 📚\",\r\n  \"Meeting 🤝\",\r\n  \"Rehearsal 💪\",\r\n  \"Audition 👨‍⚖️\"\r\n];\r\n\r\nconst eventUsages = [\"Personal Use 👤\", \"Academic 🎓\", \"Sweetwater 🤝\"];\r\n\r\nfunction getStyles(type, eventType, theme) {\r\n  return {\r\n    fontWeight:\r\n      eventType.indexOf(type) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium\r\n  };\r\n}\r\n\r\nexport default function EventDetailsInput({facultyList, \r\n                                           setSessionTitle, \r\n                                           setEventTypeSelected, \r\n                                           setFacultySelected, \r\n                                           setUsageSelected}) {\r\n\r\n  const theme = useTheme();\r\n  const [eventType, setEventType] = React.useState([]);\r\n  const [eventUsage, setEventUsage] = React.useState([]);\r\n  const [title, setTitle] = React.useState([]);\r\n  const [isProject, setIsProject] = React.useState(false);\r\n  const [faculty, setFaculty] = React.useState([]);\r\n\r\n  const handleChangeType = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setEventType(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n    userEventType = value;\r\n    setEventTypeSelected(value);\r\n    console.log(userEventType);\r\n    if (userEventType === \"Student Project 🎬\") setIsProject(true);\r\n    else setIsProject(false);\r\n  };\r\n\r\n  const handleChangeUsage = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setEventUsage(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n    userEventUsage = value;\r\n    setUsageSelected(value);\r\n    console.log(userEventUsage);\r\n  };\r\n\r\n  const FacultySelection = (\r\n    <FormControl sx={{ m: 1, width: 400 }} variant=\"standard\">\r\n      <Autocomplete\r\n        multiple\r\n        freeSolo\r\n        disableCloseOnSelect\r\n        value={faculty}\r\n        onChange={(event, newValue) => {\r\n          if (typeof newValue === \"string\") {\r\n            setFaculty({\r\n              title: newValue\r\n            });\r\n          } else {\r\n            setFaculty(newValue);\r\n            userFacultyInput = newValue;\r\n            setFacultySelected(newValue);\r\n            console.log(userFacultyInput);\r\n          }\r\n        }}\r\n        id=\"Search-for-faculty\"\r\n        options={facultyList}\r\n        getOptionLabel={(option) => {\r\n          if (typeof option === \"string\") {\r\n            // Value selected with enter, right from the input\r\n            return option;\r\n          } else return option.name; // Regular option\r\n        }}\r\n        renderOption={(props, option, { selected }) => (\r\n          <li {...props}>\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n              \r\n              sx={{\r\n                color: pink[800],\r\n                \"&.Mui-checked\": {\r\n                  color: pink[600]\r\n                }\r\n              }}\r\n            />\r\n            {option.name}\r\n          </li>\r\n        )}\r\n        renderInput={(params) => (\r\n          <TextField {...params} variant=\"outlined\" label=\"Find your professor\" />\r\n        )}\r\n      ></Autocomplete>\r\n    </FormControl>\r\n  );\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Stack spacing={1}>\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            \"& > :not(style)\": { m: 1, width: 400 }\r\n          }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextField\r\n            id=\"outlined-name\"\r\n            label=\"Session Title\"\r\n            value={title}\r\n            onChange={(event) => {\r\n              setTitle(event.target.value);\r\n              userEventTitle = event.target.value;\r\n              setSessionTitle(event.target.value);\r\n              console.log(userEventTitle);\r\n            }}\r\n          />\r\n        </Box>\r\n        <div>\r\n          <FormControl sx={{ m: 1, width: 400 }}>\r\n            <InputLabel id=\"demo-multiple-chip-label\">\r\n              Event Type\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"event-multiple-selection\"\r\n              id=\"event-multiple-chip\"\r\n              value={eventType}\r\n              onChange={handleChangeType}\r\n              input={\r\n                <OutlinedInput\r\n                  id=\"select-multiple-chip\"\r\n                  label=\"Find an option\"\r\n                />\r\n              }\r\n              renderValue={(selected) => (\r\n                <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n                  {selected.map((value) => (\r\n                    <Chip key={value} label={value} />\r\n                  ))}\r\n                </Box>\r\n              )}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {eventTypes.map((type) => (\r\n                <MenuItem\r\n                  key={type}\r\n                  value={type}\r\n                  style={getStyles(type, eventType, theme)}\r\n                >\r\n                  {type}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div>\r\n        {isProject &&<Fade in={isProject}>{FacultySelection}</Fade>}\r\n        </div>\r\n\r\n        <div>\r\n          <FormControl sx={{ m: 1, width: 400 }}>\r\n            <InputLabel id=\"demo-multiple-chip-label\">\r\n              Intended Use\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"event-multiple-selection\"\r\n              id=\"event-multiple-chip\"\r\n              value={eventUsage}\r\n              onChange={handleChangeUsage}\r\n              input={\r\n                <OutlinedInput\r\n                  id=\"select-multiple-chip\"\r\n                  label=\"Find an option\"\r\n                />\r\n              }\r\n              renderValue={(selected) => (\r\n                <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n                  {selected.map((value) => (\r\n                    <Chip key={value} label={value} />\r\n                  ))}\r\n                </Box>\r\n              )}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {eventUsages.map((usage) => (\r\n                <MenuItem\r\n                  key={usage}\r\n                  value={usage}\r\n                  style={getStyles(usage, eventUsage, theme)}\r\n                >\r\n                  {usage}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { useEffect } from 'react'; //test\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport _without from \"lodash/without\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Fade from \"@mui/material/Fade\";\r\n\r\n\r\n///////////////////   API Magic   ////////////////////////////////\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: 'keyGJts1v9eIz3Dki'}).base('appqapwXvgL64Efox');\r\n//({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx'); // real base\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300\r\n  },\r\n  inputLabel: {\r\n    color: \"gray\",\r\n    \"&.Mui-focused\": {\r\n      color: pink[800]\r\n    }\r\n  },\r\n  inputFocused: {},\r\n  select: {\r\n    color: \"black\",\r\n    \"&:before\": {\r\n      // changes the bottom textbox border when not focused\r\n      borderColor: \"gray\"\r\n    },\r\n    \"&:after\": {\r\n      // changes the bottom textbox border when clicked/focused.  thought it would be the same with input label\r\n      borderColor: pink[800]\r\n    }\r\n  },\r\n  outlinedInput: {\r\n    color: \"gray\",\r\n    \"&:after\": {\r\n      borderColor: pink[800]\r\n    }\r\n  }\r\n}));\r\n\r\n// This will be used to store input data\r\nvar userRoomType;\r\nvar userRoomSelection;\r\n//const roomTypes = [];\r\n//var disabledRoomTypes;\r\n\r\nconst roomTypes = [\r\n   \"Recording Studio 🎙️\",\r\n   \"Rehearsal Spaces 🎧\",\r\n   \"Edit & Collaboration Spaces 🎒\"\r\n];\r\n\r\nfunction getStyles(type, eventType, theme) {\r\n  return {\r\n    fontWeight:\r\n      eventType.indexOf(type) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium\r\n  };\r\n}\r\n\r\n// Variables to used for API filtering\r\nvar roomOptionsAllInfo=[];\r\nvar roomSelectedAllInfo=[];\r\nvar eventsList = [];\r\nvar unavailableTimes = [];\r\n\r\nexport default function RoomSelectionInput({roomOptionStudio, \r\n                                            roomOptionRehearsal, \r\n                                            roomOptionECspace, \r\n                                            disabledRoomTypes, \r\n                                            setRoomTypeSelected,\r\n                                            setRoomSelected,\r\n                                            roomBookingRecord,\r\n                                            setRoomBookingRecord\r\n                                            }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [roomType, setRoomType] = React.useState([]);\r\n  const [room, setRoom] = React.useState([]);\r\n\r\n  const [isStudio, setIsStudio] = React.useState(false);\r\n  const [isRehearsal, setIsRehearsal] = React.useState(false);\r\n  const [isECspace, setIsECspace] = React.useState(false);\r\n\r\n  const handleChangeRoomType = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setRoomType(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n    userRoomType = value;\r\n    setRoomTypeSelected(value);\r\n    console.log(userRoomType);\r\n\r\n    if (userRoomType === \"Recording Studio 🎙️\") {\r\n      roomOptionsAllInfo = roomOptionStudio;\r\n      setIsStudio(true);\r\n      setIsRehearsal(false);\r\n      setIsECspace(false);\r\n      setRoom([]); // Clear user input\r\n      console.log(roomOptionsAllInfo);\r\n    } else if (userRoomType === \"Rehearsal Spaces 🎧\") {\r\n      roomOptionsAllInfo = roomOptionRehearsal;\r\n      setIsStudio(false);\r\n      setIsRehearsal(true);\r\n      setIsECspace(false);\r\n      setRoom([]); // Clear user input\r\n      console.log(roomOptionsAllInfo);\r\n    } else if (userRoomType === \"Edit & Collaboration Spaces 🎒\") {\r\n      roomOptionsAllInfo = roomOptionECspace;\r\n      setIsStudio(false);\r\n      setIsRehearsal(false);\r\n      setIsECspace(true);\r\n      setRoom([]); // Clear user input\r\n    }\r\n  };\r\n\r\n  const handleChangeRoom = (event) => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    setRoom(\r\n      // On autofill we get a the stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n    userRoomSelection = value;\r\n    setRoomSelected(value);\r\n    //console.log(value);\r\n    //console.log(roomOptionsAllInfo);\r\n    \r\n    //GENERATING ARRAY WITH ALL INFO ON ROOM SELECTED\r\n    var valueLength = value.length;\r\n    var roomOptionsLength = roomOptionsAllInfo.length;\r\n    roomSelectedAllInfo = [];\r\n\r\n    for (var i = 0; i < valueLength; i++) \r\n    {\r\n      for (var x = 0; x < roomOptionsLength; x++)\r\n      {\r\n        if(roomOptionsAllInfo[x].name === value[i])\r\n          roomSelectedAllInfo.push(roomOptionsAllInfo[x]);\r\n      }\r\n    }\r\n    console.log(\"filtered array\",roomSelectedAllInfo);\r\n\r\n    ///////////////////   API Magic   ////////////////////////////////\r\n\r\n    //Crawling all rooms to find associated events whose recordIDs are stored in eventsList[]\r\n    var roomSelectedAllInfoLength = roomSelectedAllInfo.length;\r\n    eventsList = [];\r\n    var eventsListLength = 0;\r\n    for (var j = 0; j < roomSelectedAllInfoLength; j++){\r\n      \r\n      base('Rooms').find(roomSelectedAllInfo[j].key, function(err, record) {\r\n    \r\n        if (err) { console.error(err); return; }\r\n        //console.log('Retrieved', record);\r\n        eventsList.push({\r\n          name: record.get('Name'), \r\n          id: record.id,\r\n          eventStart: record.get('Start Time (from Events)'),\r\n          eventEnd: record.get('End Time (from Events)'),\r\n          eventStatus: record.get('Status (from Events)')\r\n        });\r\n        eventsListLength++;\r\n        \r\n        \r\n      });      \r\n    }\r\n    setRoomBookingRecord(eventsList)\r\n    console.log(\"Events:\",eventsList);\r\n    \r\n\r\n    //Please ignore this battlefield. But honor the fallen.\r\n\r\n    // //Crawling all events to find associated times which are stored in unavailableTimes[]\r\n    // unavailableTimes = [];\r\n    \r\n    // console.log(j);\r\n    // console.log(eventsList);\r\n    \r\n    \r\n    // console.log(\"Here\");\r\n    // console.log(JSON.stringify(eventsList[0]))\r\n\r\n    // for(const element in eventsList){\r\n    //   console.log(typeof(element));\r\n    //   console.log(element);\r\n    // }\r\n\r\n\r\n    //eventsList.forEach(element => console.log(element));\r\n\r\n\r\n    // eventsList.forEach(function (element) {\r\n    //   console.log(element);\r\n    // });\r\n\r\n\r\n    // for (var k = 0; k < eventsListLength; k++){\r\n      \r\n    //   base('Events').find(eventsListLength[k].key, function(err, record) {\r\n    //     if (err) { console.error(err); return; }\r\n    //   console.log('Retrieved event rec', record);\r\n\r\n    // });\r\n\r\n    // }\r\n    \r\n\r\n  };\r\n\r\n  /*\r\n\r\n  useEffect(() => { \r\n    //console.log(\"roomBookingRecord:\", roomBookingRecord);\r\n    if (roomBookingRecord.length !== 0) {\r\n      console.log(\"one room records\", roomBookingRecord[0].eventStart[0], roomBookingRecord[0].eventEnd[0], roomBookingRecord[0].eventStatus[0] );\r\n      //var test = roomBookingRecord[0].events[0];\r\n      //console.log(\"test\",test)\r\n    }\r\n  }, [roomBookingRecord]);\r\n\r\n*/\r\n  const handleDelete = (e, value) => {\r\n    e.preventDefault();\r\n    setRoom((current) => _without(current, value));\r\n    setRoomSelected((current) => _without(current, value));\r\n  };\r\n\r\n  const roomSelectionStudio = (\r\n    <FormControl sx={{ m: 1, width: 400 }}>\r\n      <InputLabel className={classes.inputLabel}>\r\n        Select studio room(s)\r\n      </InputLabel>\r\n      <Select\r\n        labelId=\"event-multiple-selection\"\r\n        id=\"event-multiple-chip\"\r\n        value={room}\r\n        onChange={handleChangeRoom}\r\n        multiple\r\n        input={\r\n          <OutlinedInput\r\n            id=\"select-multiple-chip\"\r\n            label=\"Select studio room(s)\"\r\n          />\r\n        }\r\n        renderValue={(selected) => (\r\n          <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n            {selected.map((value) => (\r\n              <Chip\r\n                key={value}\r\n                label={value}\r\n                onDelete={(e) => handleDelete(e, value)}\r\n                onMouseDown={(e) => {\r\n                  e.stopPropagation();\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        )}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {roomOptionStudio.map((option) => (\r\n          <MenuItem\r\n            key={option.key}\r\n            value={option.name}\r\n            style={getStyles(option.name, room, theme)}\r\n          >\r\n            <Checkbox\r\n              checked={room.indexOf(option.name) > -1} \r\n              sx={{\r\n                color: pink[800],\r\n                \"&.Mui-checked\": {\r\n                  color: pink[600]\r\n                }\r\n              }}\r\n            />\r\n            {option.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n\r\n  const roomSelectionRehearsal = (\r\n    <FormControl sx={{ m: 1, width: 400 }}>\r\n      <InputLabel id=\"demo-multiple-chip-label\">\r\n        Select rehearsal room(s)\r\n      </InputLabel>\r\n      <Select\r\n        labelId=\"event-multiple-selection\"\r\n        id=\"event-multiple-chip\"\r\n        value={room}\r\n        onChange={handleChangeRoom}\r\n        multiple\r\n        input={\r\n          <OutlinedInput\r\n            id=\"select-multiple-chip\"\r\n            label=\"Select rehearsal room(s)\"\r\n          />\r\n        }\r\n        renderValue={(selected) => (\r\n          <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n            {selected.map((value) => (\r\n              <Chip\r\n                key={value}\r\n                label={value}\r\n                onDelete={(e) => handleDelete(e, value)}\r\n                onMouseDown={(e) => {\r\n                  e.stopPropagation();\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        )}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {roomOptionRehearsal.map((option) => (\r\n          <MenuItem\r\n            key={option.key}\r\n            value={option.name}\r\n            style={getStyles(option.name, room, theme)}\r\n          >\r\n            <Checkbox\r\n              checked={room.indexOf(option.name) > -1} \r\n              sx={{\r\n                color: pink[800],\r\n                \"&.Mui-checked\": {\r\n                  color: pink[600]\r\n                }\r\n              }}\r\n            />\r\n            {option.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n\r\n  const roomSelectionECspace = (\r\n    <FormControl sx={{ m: 1, width: 400 }}>\r\n      <InputLabel id=\"demo-multiple-chip-label\">\r\n        Select Edit & Collaboration room(s)\r\n      </InputLabel>\r\n      <Select\r\n        labelId=\"event-multiple-selection\"\r\n        id=\"event-multiple-chip\"\r\n        value={room}\r\n        onChange={handleChangeRoom}\r\n        multiple\r\n        input={\r\n          <OutlinedInput\r\n            id=\"select-multiple-chip\"\r\n            label=\"Select Edit & Collaboration room(s)\"\r\n          />\r\n        }\r\n        renderValue={(selected) => (\r\n          <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n            {selected.map((value) => (\r\n              <Chip\r\n                key={value}\r\n                label={value}\r\n                onDelete={(e) => handleDelete(e, value)}\r\n                onMouseDown={(e) => {\r\n                  e.stopPropagation();\r\n                }}\r\n              />\r\n            ))}\r\n          </Box>\r\n        )}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {roomOptionECspace.map((option) => (\r\n          <MenuItem\r\n            key={option.key}\r\n            value={option.name}\r\n            style={getStyles(option.name, room, theme)}\r\n          >\r\n            <Checkbox\r\n              checked={room.indexOf(option.name) > -1} \r\n              sx={{\r\n                color: pink[800],\r\n                \"&.Mui-checked\": {\r\n                  color: pink[600]\r\n                }\r\n              }}\r\n            />\r\n            {option.name}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Stack spacing={1}>\r\n        <div>\r\n          <FormControl sx={{ m: 1, width: 400 }}>\r\n            <InputLabel className={classes.inputLabel}>Room Type</InputLabel>\r\n            <Select\r\n              className={classes.select}\r\n              value={roomType}\r\n              onChange={handleChangeRoomType}\r\n              input={\r\n                <OutlinedInput\r\n                  className={classes.outlinedInput}\r\n                  label=\"Room Type\"\r\n                />\r\n              }\r\n              renderValue={(selected) => (\r\n                <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\r\n                  {selected.map((value) => (\r\n                    <Chip key={value} label={value} />\r\n                  ))}\r\n                </Box>\r\n              )}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {roomTypes.map((type) => (\r\n                <MenuItem\r\n                  key={type}\r\n                  value={type}\r\n                  style={getStyles(type, roomType, theme)}\r\n                  disabled={disabledRoomTypes.indexOf(type) > -1}\r\n                >\r\n                  {type}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div>\r\n          {isStudio && <Fade in={isStudio}>{roomSelectionStudio}</Fade>}\r\n          {isRehearsal && <Fade in={isRehearsal}>{roomSelectionRehearsal}</Fade>}\r\n          {isECspace && <Fade in={isECspace}>{roomSelectionECspace}</Fade>}\r\n        </div>\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Snackbar from '@mui/material/Snackbar'; \r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n// This will be used to store input data\r\nvar StartTime;\r\nvar EndTime;\r\nvar unavailableRoom;\r\n\r\nfunction ISODateString(d) {\r\n  function pad(n) {\r\n    return n < 10 ? \"0\" + n : n;\r\n  }\r\n  if (d === null) return null;\r\n\r\n  console.log(d.getHours());\r\n\r\n  return (\r\n    d.getUTCFullYear() +\r\n    \"-\" +\r\n    pad(d.getUTCMonth() + 1) +\r\n    \"-\" +\r\n    pad(d.getDate()) +\r\n    \"T\" +\r\n    pad(d.getHours()) +\r\n    \":\" +\r\n    pad(d.getUTCMinutes()) +\r\n    \":\" +\r\n    \"00.000Z\"\r\n  );\r\n}\r\n\r\nfunction Add5Hours (time) {\r\n  var newTime = new Date(time);\r\n  if (newTime.getHours() > 18) {\r\n    newTime.setDate(newTime.getDate() + 1);\r\n    newTime.setHours(newTime.getHours() - 19);\r\n  } else {\r\n    newTime.setHours(newTime.getHours() + 5);\r\n  }\r\n  newTime = newTime.toISOString();\r\n  console.log(\"comparableTime:\", newTime);\r\n  return newTime;\r\n}\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" horizontal=\"center\" {...props} />;\r\n});\r\n\r\nexport default function DateTimeValidation({setTimeCorrect,\r\n                                            setStartTimeSelected, \r\n                                            setEndTimeSelected,\r\n                                            roomBookingRecord}) {\r\n  const [startValue, setSartValue] = React.useState(null);\r\n  const [endValue, setEndValue] = React.useState(null);\r\n  const [invalidTime, setInvalidTime] = React.useState(false);\r\n  const [invalidFormat, setInvalidFormat] = React.useState(false);\r\n  const [roomUnavailable, setRoomUnavailable] = React.useState(false);\r\n  const [successMsg, setSuccessMsg] = React.useState(false);\r\n\r\n  const handleFakeClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  }\r\n\r\n  const handleRealClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSuccessMsg(false);\r\n  }\r\n\r\n\r\n  const EndTimeCheck = () => {\r\n\r\n    if (StartTime === \"NaN-NaN-NaNTNaN:NaN:00.000z\" || EndTime === \"NaN-NaN-NaNTNaN:NaN:00.000z\") {\r\n      setInvalidFormat(true);\r\n      setTimeCorrect(false);\r\n      return;\r\n    } \r\n    else { \r\n      setInvalidFormat(false);    \r\n\r\n      if (StartTime > EndTime) {\r\n        setInvalidTime(true);\r\n        setTimeCorrect(false);\r\n        return;\r\n      }\r\n      else {\r\n        setInvalidTime(false);\r\n        setTimeCorrect(true);\r\n        setStartTimeSelected(StartTime);\r\n        setEndTimeSelected(EndTime);\r\n      }\r\n\r\n\r\n      if (roomBookingRecord.length !== 0 && StartTime && EndTime) {\r\n\r\n        StartTime = Add5Hours(StartTime);\r\n        EndTime = Add5Hours(EndTime);\r\n        //console.log(\"comparableStartTime:\", StartTime);\r\n        //console.log(\"comparableEndTime:\", EndTime);\r\n\r\n        var realEndTime = new Date(EndTime);\r\n        realEndTime.setHours(realEndTime.getHours() + 1);\r\n        realEndTime = realEndTime.toISOString();\r\n        \r\n        var conflictFound = false;\r\n        \r\n        for (var i = 0; !conflictFound && (i < roomBookingRecord.length); i++) {\r\n          for (var j = 0; !conflictFound && (j < roomBookingRecord[i].eventStart.length); j++){\r\n\r\n              // User selected time is covering and existing session \r\n              if ((StartTime <= roomBookingRecord[i].eventStart[j]) && (realEndTime >= roomBookingRecord[i].eventEnd[j])) {\r\n                conflictFound = true;\r\n                unavailableRoom = roomBookingRecord[i].name;\r\n                break;\r\n              } \r\n              // User selected start time is during an existing session \r\n              else if ((StartTime >= roomBookingRecord[i].eventStart[j]) && (StartTime <= roomBookingRecord[i].eventEnd[j])) {\r\n                conflictFound = true;\r\n                unavailableRoom = roomBookingRecord[i].name;\r\n                break;\r\n              }\r\n              // User selected end time is during an existing session \r\n              else if ((realEndTime >= roomBookingRecord[i].eventStart[j]) && (realEndTime <= roomBookingRecord[i].eventEnd[j])) {\r\n                conflictFound = true;\r\n                unavailableRoom = roomBookingRecord[i].name;\r\n                break;\r\n              }\r\n          }\r\n        }\r\n\r\n        if (conflictFound) {\r\n          setRoomUnavailable(true);\r\n          setSuccessMsg(false);\r\n          setTimeCorrect(false);\r\n        } else {\r\n          setRoomUnavailable(false);\r\n          setSuccessMsg(true);\r\n          setTimeCorrect(true);\r\n        }\r\n        \r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={1}>\r\n        <div>\r\n          <FormControl sx={{ m: 1, width: 400 }}>\r\n            <DateTimePicker\r\n              clearable\r\n              placeholder=\"Enter time\"\r\n              renderInput={(params) => <TextField {...params} />}\r\n              label=\"Event start time\"\r\n              value={startValue}\r\n              onChange={(newValue) => {\r\n                setSartValue(newValue);\r\n                StartTime = ISODateString(newValue);\r\n                console.log(StartTime);\r\n                setTimeCorrect(false);\r\n              }}\r\n              minDate={new Date()}\r\n              minTime={new Date(0, 0, 0, 8)}\r\n              maxTime={new Date(0, 0, 0, 23, 59)}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div>\r\n          <FormControl sx={{ m: 1, width: 400 }}>\r\n            <DateTimePicker\r\n              renderInput={(params) => <TextField {...params} />}\r\n              label=\"Proposed end time\"\r\n              value={endValue}\r\n              onChange={(newValue) => {\r\n                setEndValue(newValue);\r\n                EndTime = ISODateString(newValue);\r\n                console.log(EndTime);\r\n                setTimeCorrect(false);\r\n              }}\r\n              minTimeMessage\r\n              maxTimeMessage\r\n              minDate={new Date()}\r\n              minTime={new Date(0, 0, 0, 8)}\r\n              maxTime={new Date(0, 0, 0, 23, 59)}\r\n              clearable={true}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n      </Stack>\r\n\r\n      <Box justifyContent=\"center\" alignItems=\"center\">\r\n        <br /><Button variant=\"contained\" onClick={EndTimeCheck}>check availability</Button>\r\n      </Box>\r\n      <div>\r\n        {invalidTime && \r\n          <Snackbar open={invalidTime} autoHideDuration={10} onClose={handleFakeClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n          <Alert severity=\"error\">Proposed end time should not exceed start time!</Alert>\r\n          </Snackbar>\r\n        }\r\n        {invalidFormat && \r\n          <Snackbar open={invalidFormat} autoHideDuration={10} onClose={handleFakeClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n          <Alert severity=\"error\">Time format invalid!</Alert>\r\n          </Snackbar>\r\n        }\r\n        {roomUnavailable && \r\n          <Snackbar open={roomUnavailable} autoHideDuration={10} onClose={handleFakeClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n          <Alert severity=\"error\">{unavailableRoom} is not available at inputted time!</Alert>\r\n          </Snackbar>\r\n        }\r\n        {successMsg && \r\n          <Snackbar open={successMsg} autoHideDuration={2000} onClose={handleRealClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n          <Alert severity=\"success\">Room availability is good at inputted time</Alert>\r\n          </Snackbar>\r\n        }\r\n      </div>\r\n    </LocalizationProvider>\r\n\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl, { useFormControl } from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Snackbar from '@mui/material/Snackbar'; \r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n\r\n\r\n// This will be used to store input data\r\nvar userGear;\r\nvar unavailableGear;\r\n\r\nconst embedStyle = {\r\n  background: \"transparent\",\r\n  border: \"\"\r\n  \r\n};\r\n\r\nconst iFrameGear =(\r\n  <iframe class=\"airtable-embed\" \r\n          src=\"https://airtable.com/embed/shrmH9r8B0Zd8LwcU?backgroundColor=red\"\r\n          frameborder=\"0\"\r\n          sandbox=\"allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin\"\r\n          loading=\"lazy\"\r\n          onmousewheel=\"\"\r\n          width=\"100%\" \r\n          height=\"533\"\r\n          style={embedStyle}\r\n                \r\n  />\r\n);\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" horizontal=\"center\" {...props} />;\r\n});\r\n\r\n\r\nexport default function GearCheckOut({setGearSelected, gearList, addGear, setAddGear, startTimeSelected, endTimeSelected}) {\r\n  \r\n  const [gear, setGear] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n  const [gearUnavailable, setGearUnavailable] = React.useState(false);\r\n  const [successMsg, setSuccessMsg] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      await sleep(1e3); // For demo purposes.\r\n\r\n      if (active) {\r\n        setOptions([...gearList]);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  const handleChangeGear = (event) => {\r\n    setAddGear(event.target.checked);\r\n  };\r\n\r\n  const handleFakeClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  }\r\n\r\n  const handleRealClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSuccessMsg(false);\r\n  }\r\n \r\n  const availabilityCheck = () => {\r\n    var gears = userGear;\r\n    var StartTime = startTimeSelected;\r\n    var EndTime = endTimeSelected;\r\n    console.log(gears);\r\n    console.log(startTimeSelected);\r\n    console.log(endTimeSelected);\r\n    if (gears && StartTime && EndTime) {\r\n      var realEndTime = new Date(EndTime);\r\n      realEndTime.setHours(realEndTime.getHours() + 1);\r\n      realEndTime = realEndTime.toISOString();\r\n      \r\n      var conflictFound = false;\r\n      console.log(\"test2\");\r\n      for (var i = 0; !conflictFound && (i < gears.length); i++) {\r\n        if (!gears[i].eventStart) continue;\r\n        for (var j = 0; !conflictFound && (j < gears[i].eventStart.length); j++){\r\n\r\n            // User selected time is covering and existing session \r\n            if ((StartTime <= gears[i].eventStart[j]) && (realEndTime >= gears[i].eventEnd[j])) {\r\n              conflictFound = true;\r\n              unavailableGear = gears[i].name;\r\n              break;\r\n            } \r\n            // User selected start time is during an existing session \r\n            else if ((StartTime >= gears[i].eventStart[j]) && (StartTime <= gears[i].eventEnd[j])) {\r\n              conflictFound = true;\r\n              unavailableGear = gears[i].name;\r\n              break;\r\n            }\r\n            // User selected end time is during an existing session \r\n            else if ((realEndTime >= gears[i].eventStart[j]) && (realEndTime <= gears[i].eventEnd[j])) {\r\n              conflictFound = true;\r\n              unavailableGear = gears[i].name;\r\n              break;\r\n            }\r\n        }\r\n      }\r\n  \r\n      if (conflictFound) {\r\n        setGearUnavailable(true);\r\n        setSuccessMsg(false);\r\n\r\n      } else {\r\n        setGearUnavailable(false);\r\n        setSuccessMsg(true);\r\n      }\r\n      \r\n    }\r\n  \r\n  };\r\n\r\n  const handleOnChange = (event, newValue) => {\r\n    if (typeof newValue === \"string\") {\r\n      setGear({\r\n        title: newValue\r\n      });\r\n    } else {\r\n      setGear(newValue);\r\n      userGear = newValue;\r\n      setGearSelected(newValue);\r\n      console.log(userGear);\r\n\r\n      // call function to check for availability\r\n      setGearUnavailable(false);\r\n      setSuccessMsg(false);\r\n      if (newValue.length !==0) availabilityCheck();\r\n\r\n    };\r\n  };\r\n\r\n  \r\n  const gearInput = (\r\n    <FormControl sx={{ m: 1, width: 400 }} variant=\"standard\">\r\n      <Autocomplete\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        multiple\r\n        freeSolo\r\n        disableCloseOnSelect\r\n        value={gear}\r\n        onChange={handleOnChange}\r\n        id=\"Search-for-course\"\r\n        options={options}\r\n        getOptionLabel={(option) => {\r\n          if (typeof option === \"string\") {\r\n            // Value selected with enter, right from the input\r\n            return option;\r\n          } else return option.name; // Regular option\r\n        }}\r\n        renderOption={(props, option, { selected }) => (\r\n          <li {...props}>\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n              sx={{\r\n                color: pink[800],\r\n                \"&.Mui-checked\": {\r\n                  color: pink[600]\r\n                }\r\n              }}\r\n            />\r\n            {option.name}\r\n          </li>\r\n        )}\r\n        renderInput={(params) => (\r\n          <TextField {...params} \r\n          variant=\"outlined\" \r\n          label=\"Add Gear(s)\" \r\n          helperText=\"Available gear can be viewed below.\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n          />\r\n        )}\r\n      ></Autocomplete>\r\n      <br />\r\n    </FormControl>\r\n\r\n  );\r\n\r\n  return (\r\n    <Stack spacing={0}>\r\n      <Box sx={{ display: \"flex\", alignItems: \"flex-start\", flexWrap: \"wrap\", textAlign: \"left\",\r\n          m: 2,\r\n          fontSize: 24,\r\n          fontFamily: \"Monospace\",\r\n          lineHeight: 2,\r\n          width: 400 \r\n        }}>\r\n        \r\n          <FormLabel component=\"legend\">\r\n            Need to checkout gear for the event?\r\n          </FormLabel>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={addGear}\r\n                onChange={handleChangeGear}\r\n                sx={{\r\n                  color: pink[800],\r\n                  \"&.Mui-checked\": {\r\n                    color: pink[600]\r\n                  }\r\n                }}\r\n              />\r\n            }\r\n            label=\"Gear check-out\"\r\n          />\r\n \r\n      </Box>\r\n      \r\n      {addGear && \r\n      <Box sx={{ display: \"flex\", alignItems: \"flex-start\", flexWrap: \"wrap\", justifyContent: 'center' }}>\r\n        \r\n        <Fade in={addGear}>{gearInput}</Fade>\r\n        <Fade in={addGear}>{iFrameGear}</Fade>\r\n        {gearUnavailable && \r\n          <Snackbar open={gearUnavailable} autoHideDuration={10} onClose={handleFakeClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n          <Alert severity=\"error\">{unavailableGear} is not available at the inputted time!</Alert>\r\n          </Snackbar>\r\n        }\r\n        {successMsg && \r\n          <Snackbar open={successMsg} autoHideDuration={2000} onClose={handleRealClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n          <Alert severity=\"success\">Gear availability is good at inputted time</Alert>\r\n          </Snackbar>\r\n        }\r\n      </Box>\r\n      }\r\n    </Stack>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Fade from \"@mui/material/Fade\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n\r\n////////////////////////////////////API Magic//////////////////////////////////////////////////////\r\nvar courseList = []; \r\n\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx');\r\n//({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx'); // real base\r\n\r\nbase('Classes').select({\r\n    view: \"Grid view\"\r\n}).eachPage(function page(records, fetchNextPage) {\r\n    // This function (`page`) will get called for each page of records.\r\n\r\n    records.forEach(function(record) {\r\n        \r\n        courseList.push({key: record.id, name: record.get('Name')})\r\n    });\r\n\r\n    // To fetch the next page of records, call `fetchNextPage`.\r\n    // If there are more records, `page` will get called again.\r\n    // If there are no more records, `done` will get called.\r\n    fetchNextPage();\r\n\r\n}, function done(err) {\r\n    if (err) { console.error(err); return; }\r\n});\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// This will be used to store input data\r\nvar userCourse;\r\n\r\n\r\n\r\nexport default function CourseSelectionInput({setCourseSelected, addCourse, setAddCourse}) {\r\n\r\n  const [course, setCourse] = React.useState([]);\r\n\r\n  const handleChangeCourse = (event) => {\r\n    setAddCourse(event.target.checked);\r\n  };\r\n\r\n  const courseInput = (\r\n    <FormControl sx={{ m: 1 }} variant=\"standard\">\r\n      <Autocomplete\r\n        multiple\r\n        freeSolo\r\n        disableCloseOnSelect\r\n        sx={{ width: 400 }}\r\n        value={course}\r\n        onChange={(event, newValue) => {\r\n          if (typeof newValue === \"string\") {\r\n            setCourse({\r\n              title: newValue\r\n            });\r\n          } else {\r\n            setCourse(newValue);\r\n            userCourse = newValue;\r\n            setCourseSelected(newValue);\r\n            console.log(userCourse);\r\n          }\r\n        }}\r\n        id=\"Search-for-course\"\r\n        options={courseList}\r\n        getOptionLabel={(option) => option.name}\r\n        renderOption={(props, option, { selected }) => (\r\n          <li {...props}>\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n              \r\n              sx={{\r\n                color: pink[800],\r\n                \"&.Mui-checked\": {\r\n                  color: pink[600]\r\n                }\r\n              }}\r\n            />\r\n            {option.name}\r\n          </li>\r\n        )}\r\n        renderInput={(params) => (\r\n          <TextField {...params} variant=\"outlined\" label=\"Select course(s)\" />\r\n        )}\r\n      ></Autocomplete>\r\n    </FormControl>\r\n  );\r\n\r\n  return (\r\n    <Stack spacing={0}>\r\n      <Box sx={{ display: \"flex\", alignItems: \"flex-start\", flexWrap: \"wrap\", textAlign: \"left\",\r\n          m: 2,\r\n          fontSize: 24,\r\n          fontFamily: \"Monospace\",\r\n          lineHeight: 2,\r\n          width: 400 \r\n        }}>\r\n    \r\n          <FormLabel component=\"legend\">\r\n            Is this time slot for a course assignment?\r\n          </FormLabel>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={addCourse}\r\n                onChange={handleChangeCourse}\r\n                sx={{\r\n                  color: pink[800],\r\n                  \"&.Mui-checked\": {\r\n                    color: pink[600]\r\n                  }\r\n                }}\r\n              />\r\n            }\r\n            label=\"Course assignment\"\r\n          />\r\n\r\n      </Box>\r\n      <Box sx={{ justifyContent: 'center'}}>\r\n       {addCourse && <Fade in={addCourse}>{courseInput}</Fade>}\r\n       </Box>\r\n    </Stack>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { styled } from \"@mui/styles\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst ActionButton = styled(Button)({\r\n  background: \"linear-gradient(45deg, #ffd06a 30%, #fded2d 90%)\",\r\n  border: 0,\r\n  borderRadius: 4,\r\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n  color: \"white\",\r\n  height: 48,\r\n  padding: \"0 20px\"\r\n});\r\n\r\nexport default function FormActions({setNewEvent, setUpdateEvent, setCancelEvent, setEventID, setIDError, setGoodID, setUserSelected}) {\r\n\r\n\r\n  const handleNewEvent = () => {\r\n    setNewEvent(true);\r\n    setUpdateEvent(false);\r\n    setCancelEvent(false);\r\n    \r\n    // initialize ID status\r\n    setEventID(\"\");\r\n    setIDError(false);\r\n    setGoodID(false);\r\n\r\n    // initialize form values\r\n    setUserSelected([]);\r\n  };\r\n\r\n  const handleUpdateEvent = () => {\r\n    setNewEvent(false);\r\n    setUpdateEvent(true);\r\n    setCancelEvent(false);\r\n\r\n    // initialize ID status\r\n    setEventID(\"\");\r\n    setIDError(false);\r\n    setGoodID(false);\r\n  };\r\n\r\n  const handleCancelEvent = () => {\r\n    setNewEvent(false);\r\n    setUpdateEvent(false);\r\n    setCancelEvent(true);\r\n\r\n    // initialize ID status\r\n    setEventID(\"\");\r\n    setIDError(false);\r\n    setGoodID(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <Box>\r\n    <Grid container \r\n    justifyContent=\"center\"\r\n    alignItems=\"center\" \r\n    spacing={1}>\r\n\r\n    <Grid item xs>\r\n      <ActionButton\r\n        variant=\"contained\"\r\n        startIcon={<AddCircleIcon />}\r\n        onClick={handleNewEvent}\r\n      >\r\n        Creat Event\r\n      </ActionButton>\r\n      </Grid>\r\n\r\n      <Grid item xs>\r\n      <ActionButton\r\n        variant=\"contained\"\r\n        startIcon={<EditIcon />}\r\n        onClick={handleUpdateEvent}\r\n      >\r\n        Update Event\r\n      </ActionButton>\r\n      </Grid>\r\n\r\n      <Grid item xs>\r\n      <ActionButton\r\n        variant=\"contained\"\r\n        startIcon={<DeleteIcon />}\r\n        onClick={handleCancelEvent}\r\n      >\r\n        Cancel Event\r\n      </ActionButton>\r\n      </Grid>\r\n    </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Snackbar from '@mui/material/Snackbar'; //test\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: 'keyGJts1v9eIz3Dki'}).base('appqapwXvgL64Efox');\r\n//({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx'); // real base\r\n\r\nfunction DeleteRecord(eventID) {\r\n  base('Events').destroy(eventID, function(err, deletedRecords) {\r\n    if (err) {\r\n      console.error(err);\r\n      return;\r\n    }\r\n    console.log('Deleted', deletedRecords.length, 'records');\r\n  });\r\n}\r\n\r\nfunction UpdateRecord(eventID) {\r\n\r\nbase('Events').update([\r\n  {\r\n    \"id\": eventID,\r\n    \"fields\": {\r\n      \"Status\": \"Canceled ⛔️\"\r\n      }\r\n  }\r\n], function(err, records) {\r\n    if (err) {\r\n      console.error(err);\r\n      return;\r\n    }\r\n    records.forEach(function(record) {\r\n      console.log(\"record updated\");\r\n    });\r\n  });\r\n}\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"40%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: '#e7dcc8',\r\n  outline:0, \r\n  boxShadow: 20,\r\n  p: 4,\r\n  color: '#191b1d',\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" horizontal=\"center\" {...props} />;\r\n});\r\n\r\nexport default function EventID({IDerror, setIDError, eventID, setEventID, goodID, setGoodID, updateEvent, CancelEvent}) {\r\n\r\n  const [successMsg, setSuccessMsg] = React.useState(false);\r\n  const [openCancelDialog, setOpenCancelDialog] = React.useState(false);\r\n  const [openCancelSuccess, setOpenCancelSuccess] = React.useState(false);\r\n\r\n  const handleCheckID = () => {\r\n   \r\n    base('Events').find(eventID, function(err, record) {\r\n      if (err) { \r\n        console.error(err); \r\n        setIDError(true);\r\n        setGoodID(false);\r\n      } else {\r\n        setIDError(false);\r\n        setGoodID(true);\r\n        if (updateEvent) setSuccessMsg(true);\r\n        if (CancelEvent) setOpenCancelDialog(true);\r\n      }\r\n      return; \r\n  \r\n    });   \r\n  };\r\n\r\n  const handleCloseMessage = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSuccessMsg(false);\r\n  }\r\n\r\n  const handleCloseCancelDialog = () => {\r\n    setOpenCancelDialog(false);\r\n  };\r\n\r\n  const handleCloseCancelSubmission = () => {\r\n    setOpenCancelSuccess(false);\r\n  };\r\n\r\n  const handleSubmitCancellation = () => {\r\n    UpdateRecord(eventID);\r\n    //DeleteRecord(eventID); \r\n    setOpenCancelDialog(false);\r\n    setOpenCancelSuccess(true);\r\n\r\n    // initialize ID status\r\n    setEventID(\"\");\r\n    setIDError(false);\r\n    setGoodID(false);\r\n  };\r\n\r\n  const confirmCancelDialog = (\r\n    <Dialog\r\n    open={openCancelDialog}\r\n    TransitionComponent={Transition}\r\n    keepMounted\r\n    onClose={handleCloseCancelDialog}\r\n    aria-describedby=\"alert-dialog-slide-description\"\r\n  >\r\n    <DialogTitle>{\"Are you sure to cancel this booking?\"}</DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-slide-description\">\r\n        Once a booking is cancelled, record will be deleted from the database. \r\n        Click \"Yes\" to proceed the cancellation.\r\n      </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions>\r\n      <Button onClick={handleSubmitCancellation}>Yes</Button>\r\n      <Button onClick={handleCloseCancelDialog}>No</Button>\r\n    </DialogActions>\r\n  </Dialog>\r\n  );\r\n\r\n  const succesCancellation = (\r\n    <Modal\r\n      open={openCancelSuccess}\r\n      onClose={handleCloseCancelSubmission}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n          Cancellation Successful!\r\n        </Typography>\r\n        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n          Please check your inbox for the confirmation.\r\n        </Typography>\r\n      </Box>\r\n\r\n    </Modal>\r\n  ); \r\n\r\n  return (\r\n    <Box m= \"auto\" sx={{ display: \"flex\", alignItems: \"center\"}} >\r\n    <Grid container spacing={1}>\r\n      <Grid item>\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            \"& > :not(style)\": { width: 300 }\r\n          }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          {IDerror && (\r\n            <TextField\r\n              error\r\n              label=\"Error\"\r\n              helperText=\"ID does not exist in the system :(\"\r\n              value={eventID}\r\n              size=\"small\"\r\n              onChange={(event) => {\r\n                setEventID(event.target.value);\r\n                console.log(event.target.value);\r\n              }}\r\n            />\r\n          )}\r\n          {!IDerror && (\r\n            <TextField\r\n              label=\"Event Record ID\"\r\n              value={eventID}\r\n              size=\"small\"\r\n              onChange={(event) => {\r\n                setEventID(event.target.value);\r\n                console.log(event.target.value);\r\n              }}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Grid>\r\n      <Grid item alignItems=\"stretch\" style={{ display: \"flex\" }}>\r\n        <Box\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          sx={{ textAlign: \"left\" }}\r\n        >\r\n          <Button variant=\"contained\" disabled={!eventID} onClick={handleCheckID}>\r\n            confirm\r\n          </Button>\r\n          {successMsg && \r\n            <Snackbar open={successMsg} autoHideDuration={2000} onClose={handleCloseMessage} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n            <Alert severity=\"success\">Your booking record was found! Please re-fill up this form to update us about your booking :)</Alert>\r\n            </Snackbar>\r\n          }\r\n          {confirmCancelDialog}\r\n          {succesCancellation}\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport TextField from '@mui/material/TextField';  \r\nimport NameInput from './NameInput'; \r\nimport CheckTwoToneIcon from '@mui/icons-material/CheckTwoTone';\r\nimport { styled } from \"@mui/styles\";\r\n\r\n\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: 'keyGJts1v9eIz3Dki'}).base('appqapwXvgL64Efox');\r\n//({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx'); // real base\r\n\r\n\r\nconst SubmitButton = styled(Button)({\r\n  background: \"linear-gradient(45deg, #ffd06a 30%, #fded2d 90%)\",\r\n  border: 0,\r\n  borderRadius: 4,\r\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n  color: \"white\",\r\n  height: 48,\r\n  padding: \"0 30px\"\r\n});\r\n\r\n\r\n//create global variables here\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"40%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: '#e7dcc8',\r\n  outline:0, \r\n  boxShadow: 20,\r\n  p: 4,\r\n  color: '#191b1d',\r\n};\r\n\r\nfunction CreateRecord(users,\r\n                      sessionTitle,\r\n                      eventTypeSelected,\r\n                      faculties,\r\n                      usageSelected,\r\n                      roomTypeSelected,\r\n                      roomSelected,\r\n                      startTimeSelected,\r\n                      endTimeSelected,\r\n                      courses,\r\n                      gears,\r\n                      locations) {\r\n\r\n  base('Events').create([\r\n    {\r\n      \"fields\": {\r\n        \"Event Name\": sessionTitle, //Need to be changed for a new record to be created\r\n        \"Start Time\": startTimeSelected,\r\n        \"Proposed End Time\": endTimeSelected,\r\n        \"🚪 Room(s)\": roomSelected,\r\n        \"Class\": courses,\r\n        \"Event Type\": eventTypeSelected,\r\n        \"Faculty\": faculties,\r\n        \"Students\": users,\r\n        \"Status\": \"Booked ✅\",\r\n        \"Intent of Use\": usageSelected,\r\n        \"Gear Selection\" : gears,\r\n        \"Location\": locations\r\n        \r\n      }\r\n    }\r\n  ], function(err, records) {\r\n    if (err) {\r\n      console.error(err);\r\n      return;\r\n    }\r\n    records.forEach(function (record) {\r\n      console.log(record.getId());\r\n    });\r\n  });\r\n}\r\n\r\n\r\nfunction UpdateRecord(eventID,\r\n                      users,\r\n                      sessionTitle,\r\n                      eventTypeSelected,\r\n                      faculties,\r\n                      usageSelected,\r\n                      roomTypeSelected,\r\n                      roomSelected,\r\n                      startTimeSelected,\r\n                      endTimeSelected,\r\n                      courses,\r\n                      gears,\r\n                      locations) {\r\n\r\n  \r\nbase('Events').update([\r\n  {\r\n    \"id\": eventID,\r\n    \"fields\": {\r\n      \"Event Name\": sessionTitle,\r\n      \"Start Time\": startTimeSelected,\r\n      \"Proposed End Time\": endTimeSelected,\r\n      \"🚪 Room(s)\": roomSelected,\r\n      \"Class\": courses,\r\n      \"Event Type\": eventTypeSelected,\r\n      \"Students\": users,\r\n      \"Faculty\": faculties,\r\n      \"Status\": \"Booked ✅\",\r\n      \"Intent of Use\": usageSelected,\r\n      \"Gear Selection\" : gears,\r\n      \"Location\": locations\r\n    }\r\n  }\r\n], function(err, records) {\r\n  if (err) {\r\n    console.error(err);\r\n    return;\r\n  }\r\n  records.forEach(function(record) {\r\n    console.log(\"record updated\");\r\n  });\r\n});\r\n}\r\n\r\nexport default function Submit({userSelected, setUserSelected,\r\n                                sessionTitle, setSessionTitle,\r\n                                eventTypeSelected, setEventTypeSelected,\r\n                                facultySelected, setFacultySelected,\r\n                                usageSelected, setUsageSelected,\r\n                                roomTypeSelected, setRoomTypeSelected,\r\n                                roomSelected, setRoomSelected,\r\n                                startTimeSelected, setStartTimeSelected,\r\n                                endTimeSelected, setEndTimeSelected,\r\n                                courseSelected, setCourseSelected,\r\n                                gearSelected, setGearSelected,\r\n\r\n                                eventID, setEventID,\r\n                                newEvent, setNewEvent,\r\n                                updateEvent, setUpdateEvent,\r\n                                CancelEvent, setCancelEvent,\r\n                                timeCorrect,\r\n                                setUserCount,\r\n                                setAddCourse,\r\n                                setAddGear,\r\n                                roomBookingRecord\r\n                                }) {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  \r\n  const [error, setError] = React.useState(false);\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const handleSubmit = () => {\r\n    setOpen(true);\r\n\r\n    // getting the IDs lists for linking fields\r\n    var users = [];\r\n    var faculties = [];\r\n    var courses = [];\r\n    var gears = [];\r\n    var locations = [];\r\n\r\n    if (userSelected) {\r\n      userSelected.forEach(function(obj){\r\n          users.push(obj.id);\r\n      })\r\n    }\r\n    if (facultySelected) {\r\n      facultySelected.forEach(function(obj){\r\n        faculties.push(obj.id);\r\n      })\r\n    }\r\n    if (courseSelected) {\r\n      courseSelected.forEach(function(obj){\r\n        courses.push(obj.key);\r\n      })\r\n    }\r\n    if (gearSelected) {\r\n      gearSelected.forEach(function(obj){\r\n        gears.push(obj.id);\r\n      })\r\n    }\r\n    if (roomBookingRecord) {\r\n      roomBookingRecord.forEach(function(obj){\r\n        locations.push(obj.id);\r\n      })\r\n    }\r\n\r\n    console.log(courses);\r\n    // perform form action\r\n    if (newEvent) {\r\n      CreateRecord(\r\n        users,\r\n        sessionTitle,\r\n        eventTypeSelected,\r\n        faculties,\r\n        usageSelected,\r\n        roomTypeSelected,\r\n        roomSelected,\r\n        startTimeSelected,\r\n        endTimeSelected,\r\n        courses,\r\n        gears,\r\n        locations);\r\n    }\r\n    else if (updateEvent) {\r\n      UpdateRecord(\r\n        eventID,\r\n        users,\r\n        sessionTitle,\r\n        eventTypeSelected,\r\n        faculties,\r\n        usageSelected,\r\n        roomTypeSelected,\r\n        roomSelected,\r\n        startTimeSelected,\r\n        endTimeSelected,\r\n        courses,\r\n        gears,\r\n        locations);\r\n\r\n    } \r\n    console.log(\"checking error\");\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n\r\n    // Clears all form fields\r\n    // event record data\r\n    setUserSelected([]);\r\n    setSessionTitle(\"\");\r\n    setEventTypeSelected([]);\r\n    setFacultySelected([]);\r\n    setUsageSelected([]);\r\n    setRoomTypeSelected([]);\r\n    setRoomSelected([]);\r\n    setStartTimeSelected(\"\");\r\n    setEndTimeSelected(\"\");\r\n    setCourseSelected([]);\r\n    setGearSelected([]);\r\n    setEventID(\"\");\r\n\r\n    // form actions\r\n    setNewEvent(false);\r\n    setUpdateEvent(false);\r\n    setCancelEvent(false);\r\n\r\n    // other display related variables\r\n    setUserCount(0);\r\n    setAddCourse(false);\r\n    setAddGear(false);\r\n\r\n    // slose the confirmation page\r\n    setOpen(false); \r\n    window.location.reload();\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <SubmitButton \r\n      variant=\"contained\" \r\n      disabled={!(sessionTitle && roomTypeSelected && eventTypeSelected && endTimeSelected && startTimeSelected && timeCorrect)}\r\n      onClick={handleSubmit}>\r\n        SUBMIT\r\n      </SubmitButton>   \r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Submission Successful!\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            Please check your inbox for booking confirmation.\r\n          </Typography>\r\n        </Box>\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport SlideCalendar from '../components/slideCalendar';\r\nimport SlideMessage from '../components/slideMessage';\r\nimport NameInput from '../components/form/NameInput';\r\nimport EventDetailsInput from '../components/form/EventDetailsInput';\r\nimport RoomSelection from '../components/form/RoomSelection';\r\nimport TimeInput from '../components/form/TimeInput';\r\nimport GearCheckOut from '../components/form/GearCheckOut';\r\nimport CourseInput from '../components/form/CourseInput';\r\nimport FormActions from '../components/form/FormActions';\r\nimport EventID from '../components/form/EventID';\r\nimport Submit from '../components/form/Submit';\r\n\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Grow from '@mui/material/Grow';\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\nconst peopleAllInfo = [];\r\nconst SMCpeople = [];\r\nconst facultyList = [];\r\n\r\nconst RecordingStudioRoomsList = [];\r\nconst RecordingStudioRoomsIDs = [];\r\n\r\nconst RehearsalRoomsList = [];\r\nconst RehearsalRoomsIDs = [];\r\n\r\nconst ECRoomsList = [];\r\nconst ECRoomsIDs = [];\r\n\r\n///////////////////////////////////////////             ///////////////////////////////////////////\r\n///////////////////////////////////////////  API CALLS  ///////////////////////////////////////////\r\n///////////////////////////////////////////             ///////////////////////////////////////////\r\n\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: 'keyGJts1v9eIz3Dki'}).base('appqapwXvgL64Efox');\r\n//({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx'); // real base\r\n\r\n\r\n//({apiKey: 'keyGJts1v9eIz3Dki'}).base('appqapwXvgL64Efox')\r\n// original: ({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx');\r\n\r\nvar x=0;\r\n///////////////////////Pulling records from SMC People///////////////////////\r\nbase('SMC People').select({\r\n    view: \"ALL PEOPLE\"\r\n}).eachPage(function page(records, fetchNextPage) {\r\n    // This function (`page`) will get called for each page of records.\r\n\r\n    records.forEach(function(record) {\r\n      \r\n      \r\n      SMCpeople.push( {name: record.get('Person'), id: record.id});\r\n      peopleAllInfo[x] = {id: record.id, name: record.get('Person'), roomAccess: record.get('Room Access'), gearAccess: record.get('Gear Access')} ;\r\n      x=x+1;\r\n      \r\n      if(record.get('Role').includes('Faculty/Staff 🎓'))\r\n      {\r\n        facultyList.push({name: record.get('Person'), id: record.id});\r\n      }\r\n\r\n        //console.log(x,'Retrieved', record.get('Person'), record)\r\n        //console.log(x,'Retrieved', record.get('Person'), record.get('Room Access'), record.get('Gear Access'));\r\n    });\r\n\r\n    // To fetch the next page of records, call `fetchNextPage`.\r\n    // If there are more records, `page` will get called again.\r\n    // If there are no more records, `done` will get called.\r\n    fetchNextPage();\r\n\r\n}, function done(err) {\r\n    if (err) { console.error(err); return; }\r\n});\r\n\r\n\r\n/////////////////////////////////////////// Pulling Records from Rooms  ///////////////////////////////////////////\r\n\r\n//Recording Studio:\r\n\r\nbase('Rooms').select({\r\n    view: \"Bookable Rooms 🔒 (Studio Booking Form)\"\r\n}).eachPage(function page(records, fetchNextPage) {\r\n    // This function (`page`) will get called for each page of records.\r\n\r\n    records.forEach(function(record) {\r\n\r\n      RecordingStudioRoomsList.push( {key: record.id, name: record.get('Name')});\r\n        \r\n    });\r\n\r\n    // To fetch the next page of records, call `fetchNextPage`.\r\n    // If there are more records, `page` will get called again.\r\n    // If there are no more records, `done` will get called.\r\n    fetchNextPage();\r\n\r\n}, function done(err) {\r\n    if (err) { console.error(err); return; }\r\n});\r\n\r\n//Rehearsal Rooms:\r\n\r\nbase('Rooms').select({\r\n    view: \"Bookable Rooms 🔒 (Rehearsal Booking Form)\"\r\n}).eachPage(function page(records, fetchNextPage) {\r\n    // This function (`page`) will get called for each page of records.\r\n\r\n    records.forEach(function(record) {\r\n        \r\n      RehearsalRoomsList.push({key: record.id, name: record.get('Name'), events: record.get('Events') });\r\n        \r\n    });\r\n\r\n    // To fetch the next page of records, call `fetchNextPage`.\r\n    // If there are more records, `page` will get called again.\r\n    // If there are no more records, `done` will get called.\r\n    fetchNextPage();\r\n\r\n}, function done(err) {\r\n    if (err) { console.error(err); return; }\r\n});\r\n\r\n\r\n//Edit and Collab:\r\n\r\nbase('Rooms').select({\r\n    view: \"Bookable Rooms 🔒 (Edit and Collab Booking Form)-devTeam\"\r\n}).eachPage(function page(records, fetchNextPage) {\r\n    // This function (`page`) will get called for each page of records.\r\n\r\n    records.forEach(function(record) {\r\n        \r\n        ECRoomsList.push({key: record.id, name: record.get('Name'), events: record.get('Events')});\r\n        //console.log(record);\r\n        \r\n    });\r\n\r\n    // To fetch the next page of records, call `fetchNextPage`.\r\n    // If there are more records, `page` will get called again.\r\n    // If there are no more records, `done` will get called.\r\n    fetchNextPage();\r\n\r\n}, function done(err) {\r\n    if (err) { console.error(err); return; }\r\n});\r\n\r\n\r\nfunction Home() {\r\n\r\n    // main input data\r\n    const [userSelected, setUserSelected] = React.useState([]); \r\n    const [sessionTitle, setSessionTitle] = React.useState(\"\");\r\n    const [eventTypeSelected, setEventTypeSelected] = React.useState([]);\r\n    const [facultySelected, setFacultySelected] = React.useState([]);\r\n    const [usageSelected, setUsageSelected] = React.useState([]);\r\n    const [roomTypeSelected, setRoomTypeSelected] = React.useState([]);\r\n    const [roomSelected, setRoomSelected] = React.useState([]); \r\n    const [startTimeSelected, setStartTimeSelected] = React.useState(\"\"); \r\n    const [endTimeSelected, setEndTimeSelected] = React.useState(\"\"); \r\n    const [courseSelected, setCourseSelected] = React.useState([]);\r\n    const [gearSelected, setGearSelected] = React.useState([]); \r\n\r\n    // form update or delete\r\n    const [IDerror, setIDError] = React.useState(false);\r\n    const [eventID, setEventID] = React.useState(\"\");\r\n    const [goodID, setGoodID] = React.useState(false);\r\n  \r\n\r\n    // supportive input data\r\n    const [userCount, setUserCount] = React.useState(0);\r\n    const [disabledRoomTypes, setDisabledRoomTypes] = React.useState([]); \r\n    const [timeCorrect, setTimeCorrect] = React.useState(false);\r\n    const [gearList, setGearList] = React.useState([]);\r\n    const [roomBookingRecord, setRoomBookingRecord] = React.useState([]);\r\n    \r\n    const [addGear, setAddGear] = React.useState(false);\r\n    const [addCourse, setAddCourse] = React.useState(false);\r\n    \r\n    // form action\r\n    const [newEvent, setNewEvent] = React.useState(false);\r\n    const [updateEvent, setUpdateEvent] = React.useState(false);\r\n    const [CancelEvent, setCancelEvent] = React.useState(false);\r\n\r\n    const nameInput = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2}}>\r\n        <Box sx={{textAlign: \"left\", m: 2, fontSize: 22, lineHeight: 2}}>\r\n          Who's booking?\r\n          <br />\r\n          <FormLabel component=\"legend\">\r\n            i.e. takes all responsibility!\r\n          </FormLabel>\r\n        </Box>\r\n        <NameInput \r\n        peopleAllInfo={peopleAllInfo} \r\n        userSelected={userSelected}\r\n        setUserSelected={setUserSelected} \r\n        setUserCount={setUserCount} \r\n        setDisabledRoomTypes={setDisabledRoomTypes}\r\n        setGearList={setGearList}/>\r\n      </Paper>  \r\n    );\r\n    \r\n    const eventDetailsInput = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n        <Box sx={{ textAlign: \"left\", m: 2, fontSize: 22, lineHeight: 2}}>  \r\n          Event Details\r\n        </Box>\r\n        <EventDetailsInput \r\n        facultyList = {facultyList}\r\n        setSessionTitle={setSessionTitle}\r\n        setEventTypeSelected={setEventTypeSelected}\r\n        setFacultySelected={setFacultySelected}\r\n        setUsageSelected={setUsageSelected}\r\n        />\r\n        <br />\r\n      </Paper>\r\n    );\r\n\r\n    const roomInput = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n      <Box sx={{ textAlign: \"left\", m: 2, fontSize: 22, lineHeight: 2 }}>  \r\n        Room Selection\r\n      <Grid container spacing={1}>\r\n      <Grid item xs={1}>\r\n      <Box sx={{fontSize: 20,lineHeight: 1.5}}>\r\n      📌 \r\n      </Box>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <FormLabel component=\"legend\">\r\n        If the Edit & Collaboration Spaces is selected, option to add gear(s) to your booking will be available at the end of the form :)\r\n        </FormLabel>\r\n      </Grid>\r\n      </Grid>\r\n      </Box>\r\n      <RoomSelection \r\n      roomOptionStudio={RecordingStudioRoomsList} \r\n      roomOptionRehearsal={RehearsalRoomsList} \r\n      roomOptionECspace={ECRoomsList} \r\n      disabledRoomTypes={disabledRoomTypes}\r\n      setRoomTypeSelected={setRoomTypeSelected}\r\n      setRoomSelected={setRoomSelected}\r\n\r\n      roomBookingRecord={roomBookingRecord} setRoomBookingRecord={setRoomBookingRecord}\r\n\r\n      />\r\n      <br />\r\n      </Paper>\r\n    );\r\n\r\n    const timeInput = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n      <Box sx={{ textAlign: \"left\", m: 2, fontSize: 22, lineHeight: 2}}>  \r\n      Session Time\r\n      <Grid container spacing={1}>\r\n      <Grid item xs={1}>\r\n      <Box sx={{fontSize: 20,lineHeight: 1.5}}>\r\n      📌 \r\n      </Box>\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n        <FormLabel component=\"legend\">\r\n        Based on the your chosen Session Time, we wil notify you with the availability of the room(s) selected above. \r\n        </FormLabel>\r\n      </Grid>\r\n      </Grid>\r\n      </Box>\r\n      <TimeInput \r\n      setStartTimeSelected={setStartTimeSelected}\r\n      setEndTimeSelected={setEndTimeSelected}\r\n      setTimeCorrect={setTimeCorrect}\r\n      roomBookingRecord={roomBookingRecord}\r\n      />\r\n      <br />\r\n      </Paper>\r\n    );\r\n    \r\n    const courseInput = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n      <CourseInput \r\n      setCourseSelected={setCourseSelected}\r\n      addCourse={addCourse} setAddCourse={setAddCourse}\r\n      />\r\n      <br />\r\n      </Paper>\r\n    );\r\n\r\n    const gearInput = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n      <GearCheckOut \r\n      setGearSelected={setGearSelected}\r\n      gearList={gearList}\r\n      addGear={addGear} setAddGear={setAddGear}\r\n      startTimeSelected={startTimeSelected}\r\n      endTimeSelected={endTimeSelected}\r\n      />\r\n      <br />\r\n      </Paper>\r\n    );\r\n    \r\n\r\n    const SMChours = (\r\n      <Paper variant=\"outlined\" sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n      <Box sx={{ textAlign: \"center\", m: 1, fontSize: 22, lineHeight: 2}}>  \r\n      SMC Hours & Availability\r\n      </Box>\r\n      <Box sx={{ mt: -5, ml: 6, textAlign: \"left\", fontSize: 17, lineHeight: 2}}>  \r\n      <br />\r\n      <Grid container>\r\n      <Grid item xs={7}>\r\n      <b>Monday — Friday: </b><li>8:00 AM — Midnight</li>\r\n      </Grid>\r\n      <Grid item xs=\"auto\">\r\n      <b>Saturday & Sunday: </b><li>12:00 PM — Midnight</li>\r\n      </Grid>\r\n      </Grid>\r\n      </Box>\r\n      </Paper>\r\n    );\r\n\r\n    const formActions = (\r\n      //<Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n      <Box m=\"auto\" sx={{ maxWidth: 700, width: \"90%\"}}>\r\n      <FormActions \r\n      setNewEvent={setNewEvent}\r\n      setUpdateEvent={setUpdateEvent}\r\n      setCancelEvent={setCancelEvent}\r\n      setEventID={setEventID}\r\n      setIDError={setIDError}\r\n      setGoodID={setGoodID}\r\n      setUserSelected={setUserSelected}\r\n      />\r\n      <br />\r\n      </Box>\r\n  );\r\n\r\n    const requestEventID = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n      <Box sx={{ textAlign: \"left\", m: 1, fontSize: 20, lineHeight: 1.5 }}> \r\n      <Grid container alignItems=\"flex-start\" spacing={1}>\r\n      <Grid item xs={1}>\r\n      📌\r\n      </Grid>\r\n      <Grid item xs={11}>\r\n          <FormLabel component=\"legend\">\r\n          Please enter the Event Record ID you recieved in the confirmation email before proceeding to the rest of the form.\r\n          </FormLabel>\r\n      </Grid>\r\n      </Grid>\r\n      </Box>\r\n      <Box m= \"auto\" sx={{ my: 2,display: \"flex\", alignItems: \"center\"}} >\r\n      <EventID \r\n      IDerror={IDerror} setIDError={setIDError}\r\n      eventID={eventID} setEventID={setEventID}\r\n      goodID={goodID} setGoodID={setGoodID}\r\n      updateEvent={updateEvent} CancelEvent={CancelEvent}\r\n      />\r\n      </Box>\r\n      </Paper>\r\n    );\r\n    \r\n    return(  \r\n\r\n        <div>\r\n            <SlideMessage/>\r\n            <SlideCalendar/>\r\n            \r\n            <Fade in={true}>{SMChours}</Fade>\r\n            <Fade in={true}>{formActions}</Fade>\r\n\r\n            {(updateEvent) && <Grow in={(updateEvent)}>{requestEventID}</Grow>}\r\n            {(CancelEvent) && <Grow in={(CancelEvent)}>{requestEventID}</Grow>}\r\n\r\n            <Grow in={(newEvent || (updateEvent && goodID))}>{nameInput}</Grow>\r\n\r\n            {(userCount > 0) && (newEvent || (updateEvent && goodID)) && <Grow in={userCount > 0}>{eventDetailsInput}</Grow>}\r\n            {(userCount > 0) && (newEvent || (updateEvent && goodID)) && <Grow in={userCount > 0}>{roomInput}</Grow>}\r\n            {(userCount > 0) && (newEvent || (updateEvent && goodID)) && (roomSelected.length !== 0) && <Grow in={userCount > 0}>{timeInput}</Grow>}\r\n\r\n            <Grow in={(newEvent || (updateEvent && goodID))}>{courseInput}</Grow>\r\n            {(userCount > 0) && (newEvent || (updateEvent && goodID)) && <Grow in={userCount > 0}>{gearInput}</Grow>}\r\n\r\n            {(userCount > 0) && (newEvent || (updateEvent && goodID)) &&\r\n            <Submit\r\n            userSelected={userSelected} setUserSelected={setUserSelected}\r\n            sessionTitle={sessionTitle} setSessionTitle={setSessionTitle}\r\n            eventTypeSelected={eventTypeSelected} setEventTypeSelected={setEventTypeSelected}\r\n            facultySelected={facultySelected} setFacultySelected={setFacultySelected}\r\n            usageSelected={usageSelected} setUsageSelected={setUsageSelected}\r\n            roomTypeSelected={roomTypeSelected} setRoomTypeSelected={setRoomTypeSelected}\r\n            roomSelected={roomSelected} setRoomSelected={setRoomSelected}\r\n            startTimeSelected={startTimeSelected} setStartTimeSelected={setStartTimeSelected}\r\n            endTimeSelected={endTimeSelected} setEndTimeSelected={setEndTimeSelected}\r\n            courseSelected={courseSelected} setCourseSelected={setCourseSelected}\r\n            gearSelected={gearSelected} setGearSelected={setGearSelected}\r\n\r\n            eventID={eventID} setEventID={setEventID}\r\n            newEvent={newEvent} setNewEvent={setNewEvent}\r\n            updateEvent={updateEvent} setUpdateEvent={setUpdateEvent}\r\n            CancelEvent={CancelEvent} setCancelEvent={setCancelEvent}\r\n\r\n            setAddCourse={setAddCourse}\r\n            setAddGear={setAddGear}\r\n            setUserCount={setUserCount}\r\n            timeCorrect={timeCorrect}\r\n            roomBookingRecord={roomBookingRecord}\r\n            />}\r\n            <br />\r\n         \r\n        </div>\r\n\r\n    ) \r\n   \r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst noteStyle = {\r\n    background: '#e7dcc8',\r\n    color: 'white',\r\n    padding: '1.5rem'\r\n\r\n}\r\n\r\nconst embedStyle = {\r\n    background: \"transparent\",\r\n    border: \"\"\r\n    \r\n  };\r\n\r\nfunction SlideCalendarRec() {\r\n\r\n    const slideStyle = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            marginRight:-500\r\n        },\r\n        to:{\r\n            opacity: 1,\r\n            marginRight:0\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n    \r\n    <animated.div style={slideStyle}>\r\n        <div style={noteStyle}>\r\n            <br></br>\r\n            <iframe className=\"airtable-embed\" \r\n                src=\"https://airtable.com/embed/shr4OwRJGGOsC2lzf?backgroundColor=red\"\r\n                frameborder=\"0\"\r\n                sandbox=\"allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin\"\r\n                loading=\"lazy\"\r\n                onmousewheel=\"\"\r\n                width=\"50%\" \r\n                height=\"533\"\r\n                style={embedStyle}\r\n            />\r\n        </div>\r\n    </animated.div>\r\n    \r\n           \r\n    )\r\n}\r\n\r\nexport default SlideCalendarRec\r\n","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst noteStyle = {\r\n    background: '#e7dcc8',\r\n    color: 'white',\r\n    padding: '1.5rem'\r\n\r\n}\r\n\r\nconst embedStyle = {\r\n    background: \"transparent\",\r\n    border: \"\"\r\n    \r\n  };\r\n\r\nfunction SlideCalendarRec() {\r\n\r\n    const slideStyle = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            marginRight:-500\r\n        },\r\n        to:{\r\n            opacity: 1,\r\n            marginRight:0\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n    \r\n    <animated.div style={slideStyle}>\r\n        <div style={noteStyle}>\r\n            <br></br>\r\n            <iframe class=\"airtable-embed\" \r\n                src=\"https://airtable.com/embed/shrZB6CzqbjamrPJU\"\r\n                frameborder=\"0\"\r\n                sandbox=\"allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin\"\r\n                loading=\"lazy\"\r\n                onmousewheel=\"\"\r\n                width=\"50%\" \r\n                height=\"533\"\r\n                style={embedStyle}\r\n            />\r\n        </div>\r\n    </animated.div>\r\n           \r\n    )\r\n}\r\n\r\nexport default SlideCalendarRec\r\n","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst noteStyle = {\r\n    background: '#e7dcc8',\r\n    color: 'white',\r\n    padding: '1.5rem'\r\n\r\n}\r\n\r\nconst embedStyle = {\r\n    background: \"transparent\",\r\n    border: \"\"\r\n    \r\n  };\r\n\r\nfunction SlideCalendarCollab() {\r\n\r\n    const slideStyle = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            marginRight:-500\r\n        },\r\n        to:{\r\n            opacity: 1,\r\n            marginRight:0\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n    \r\n    <animated.div style={slideStyle}>\r\n        <div style={noteStyle}>\r\n            <br></br>\r\n            <iframe class=\"airtable-embed\" \r\n                src=\"https://airtable.com/embed/shru3rbc7s9mbQj2i\"\r\n                frameborder=\"0\"\r\n                sandbox=\"allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin\"\r\n                loading=\"lazy\"\r\n                onmousewheel=\"\"\r\n                width=\"50%\" \r\n                height=\"533\"\r\n                style={embedStyle}\r\n            />\r\n        </div>\r\n    </animated.div>\r\n           \r\n    )\r\n}\r\n\r\nexport default SlideCalendarCollab\r\n","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst noteStyle = {\r\n    background: '#CFB991',\r\n    color: '#3b3e43',\r\n    padding: '1.5rem'\r\n\r\n}\r\n\r\nfunction SlideMessageRec() {\r\n\r\n    const slideStyle = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            marginLeft:-500\r\n        },\r\n        to:{\r\n            opacity: 1,\r\n            marginLeft:0\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n    \r\n    <animated.div style={slideStyle}>\r\n        <div style={noteStyle}>\r\n            \r\n            <h1>\r\n                Ready to go on record?\r\n            </h1>\r\n            <h3>\r\n                Please check out the calendar below before you book a slot at the Recording Studio\r\n            </h3>\r\n        </div>\r\n    </animated.div>\r\n           \r\n    )\r\n}\r\n\r\nexport default SlideMessageRec\r\n","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst noteStyle = {\r\n    background: '#CFB991',\r\n    color: '#3b3e43',\r\n    padding: '1.5rem'\r\n\r\n}\r\n\r\nfunction SlideMessageReh() {\r\n\r\n    const slideStyle = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            marginLeft:-500\r\n        },\r\n        to:{\r\n            opacity: 1,\r\n            marginLeft:0\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n    \r\n    <animated.div style={slideStyle}>\r\n        <div style={noteStyle}>\r\n            \r\n            <h1>\r\n                Need some practice?\r\n            </h1>\r\n            <h3>\r\n                Please check out the calendar below before you book a Rehearsal Space\r\n            </h3>\r\n        </div>\r\n    </animated.div>\r\n           \r\n    )\r\n}\r\n\r\nexport default SlideMessageReh\r\n","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nconst noteStyle = {\r\n    background: '#CFB991',\r\n    color: '#3b3e43',\r\n    padding: '1.5rem'\r\n\r\n}\r\n\r\nfunction SlideMessageCollab() {\r\n\r\n    const slideStyle = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            marginLeft:-500\r\n        },\r\n        to:{\r\n            opacity: 1,\r\n            marginLeft:0\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n    \r\n    <animated.div style={slideStyle}>\r\n        <div style={noteStyle}>\r\n            <h1>\r\n                Looking for space?\r\n            </h1>\r\n            <h3>\r\n                Take advantage of the edit suites and other collaboration spaces in the SMC building.\r\n            </h3>\r\n        </div>\r\n    </animated.div>\r\n           \r\n    )\r\n}\r\n\r\nexport default SlideMessageCollab\r\n","import React from 'react'\r\nimport SlideCalendarRec from '../components/slideCalendarRec';\r\nimport SlideCalendarReh from '../components/slideCalendarReh';\r\nimport SlideCalendarCollab from '../components/slideCalendarCollab';\r\nimport SlideMessageRec from '../components/slideMessageRec';\r\nimport SlideMessageReh from '../components/slideMessageReh';\r\nimport SlideMessageCollab from '../components/slideMessageCollab';\r\n\r\nfunction schedules() {\r\n    return(  \r\n\r\n        <div>\r\n            <SlideMessageRec/>  \r\n            <SlideCalendarRec/>\r\n            <SlideMessageReh/> \r\n            <SlideCalendarReh/>\r\n            <SlideMessageCollab/>\r\n            <SlideCalendarCollab/>\r\n        </div>     \r\n\r\n    ) \r\n}\r\n\r\nexport default schedules","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\r\nimport SearchRoundedIcon from \"@mui/icons-material/SearchRounded\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\n\r\n\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: 'keyGJts1v9eIz3Dki'}).base('appqapwXvgL64Efox');\r\n//({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx'); // real base\r\n\r\n// This will be used to store input data\r\nvar userValues = [];\r\n\r\nvar emojis = [\r\n  \"🎹\",\r\n  \"😃\",\r\n  \"😀\",\r\n  \"😊\",\r\n  \"😉\",\r\n  \"😍\",\r\n  \"😘\",\r\n  \"📯\",\r\n  \"🪕\",\r\n  \"😙\",\r\n  \"😜\",\r\n  \"😝\",\r\n  \"😛\",\r\n  \"🎵\",\r\n  \"🎺\",\r\n  \"🥁\",\r\n  \"🎻\",\r\n  \"🎷\",\r\n  \"😂\",\r\n  \"🎸\",\r\n  \"😪\",\r\n  \"😋\",\r\n  \"😷\",\r\n  \"😎\",\r\n  \"😴\",\r\n  \"😵\",\r\n  \"😲\",\r\n  \"😈\"\r\n];\r\n\r\nconst userEmoji = [];\r\nconst userNameList = [];\r\n\r\n\r\nfunction renderItem({ item, handleRemoveName }) {\r\n  const emoji = userEmoji[userNameList.indexOf(item)];\r\n\r\n  return (\r\n    <ListItem\r\n      secondaryAction={\r\n        <IconButton\r\n          edge=\"end\"\r\n          aria-label=\"delete\"\r\n          title=\"Delete\"\r\n          onClick={() => handleRemoveName(item)}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      }\r\n    >\r\n      <ListItemText primary={emoji + \" \" + item} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nvar gearList = [];    //store list of gear available to user\r\nvar lendLevel = \"\";      //store determined lending level\r\n\r\n////////////////////// Filtering gears accessible using API data\r\nfunction filterGear(){\r\n  \r\n  \r\n  if (userValues.some(element => element.gearAccess === 'Gear Level 4')) {\r\n    lendLevel = \"Lending Level 4\"; \r\n  }\r\n\r\n  else if (userValues.some(element => element.gearAccess === 'Gear Level 3')){\r\n    lendLevel = \"Lending Level 3\";\r\n  }\r\n  else if (userValues.some(element => element.gearAccess === 'Gear Level 2')){\r\n    lendLevel = \"Lending Level 2\";\r\n  }\r\n  else if (userValues.some(element => element.gearAccess === 'Gear Level 1')){\r\n    lendLevel = \"Lending Level 1\";\r\n  }\r\n  else{\r\n    \r\n    \r\n    return gearList;\r\n  }\r\n\r\n  //API call to appropriate view on Airtable. View called depends on \"lendLevel\" determined above. \r\n\r\n    base('Gear').select({\r\n      view: lendLevel\r\n    }).eachPage(function page(records, fetchNextPage) {\r\n      // This function (`page`) will get called for each page of records.\r\n  \r\n      records.forEach(function(record) {\r\n          //console.log('Retrieved', record.get('Item'), record);\r\n          gearList.push({\r\n            name: record.get('Item'), \r\n            id: record.id, \r\n            eventStart: record.get('Start Time (from Events)'),\r\n            eventEnd: record.get('End Time (from Events)'),\r\n            eventStatus: record.get('Status (from Events)')\r\n          })\r\n      });\r\n  \r\n      // To fetch the next page of records, call `fetchNextPage`.\r\n      // If there are more records, `page` will get called again.\r\n      // If there are no more records, `done` will get called.\r\n      fetchNextPage();\r\n  \r\n  }, function done(err) {\r\n      if (err) { console.error(err); return; }\r\n  });\r\n\r\n  return gearList;\r\n  \r\n}\r\n\r\nconst filter = createFilterOptions();\r\n\r\nfunction NameInput({peopleAllInfo, userSelected, setUserSelected, setGearList}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [error, setError] = React.useState(false);\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const [nameInDisplay, setNameInDisplay] = React.useState(\r\n    userNameList.slice(0, 3)\r\n  );\r\n\r\n  const Initilize = () => {\r\n    if (!userSelected) userNameList = [];\r\n  }\r\n\r\n  const handleAddName = () => {\r\n    setNameInDisplay(userNameList);\r\n  };\r\n\r\n  const handleRemoveName = (item) => {\r\n    console.log(item);\r\n    setNameInDisplay((prev) => [...prev.filter((i) => i !== item)]);\r\n    userNameList.splice(userNameList.indexOf(item), 1);\r\n    userValues = userValues.filter((user) => user.name !== item);\r\n\r\n    setUserSelected(userValues);\r\n    setGearList(filterGear());\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason !== \"backdropClick\") {\r\n      setOpen(false);\r\n      setValue(null);\r\n      setError(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    if (typeof newValue === \"string\") {\r\n      setValue({\r\n        title: newValue\r\n      });\r\n    } else {\r\n      setValue(newValue);\r\n    }\r\n    if (newValue != null) {\r\n      if (userNameList.indexOf(newValue.name) > -1) {\r\n        console.log(userNameList.indexOf(newValue));\r\n        setError(true);\r\n      } else {\r\n        setError(false);\r\n        const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];\r\n        userEmoji.push(randomEmoji);\r\n        handleClose();\r\n        userValues.push(newValue);\r\n        userNameList.push(newValue.name);\r\n\r\n        setUserSelected(userValues);\r\n        setGearList(filterGear());\r\n\r\n        handleAddName();\r\n      }\r\n  }\r\n  };\r\n\r\n  const nameInputDialog = (\r\n    <Dialog disableEscapeKeyDown open={open} onClose={handleClose}>\r\n      <DialogTitle>Find your name</DialogTitle>\r\n      <DialogContent>\r\n        <Stack spacing={0} sx={{ width: 480 }}>\r\n          <Autocomplete\r\n            value={value}\r\n            onChange={handleChange}\r\n            filterOptions={(options, params) => {\r\n              const filtered = filter(options, params);\r\n              return filtered;\r\n            }}\r\n            selectOnFocus\r\n            clearOnBlur={true}\r\n            handleHomeEndKeys\r\n            id=\"Search-for-name\"\r\n            options={peopleAllInfo}\r\n            getOptionLabel={(option) => {\r\n              if (typeof option === \"string\") {\r\n                // Value selected with enter, right from the input\r\n                return option;\r\n              } else return option.name; // Regular option\r\n            }}\r\n            renderOption={(props, option) => <li {...props}>{option.name}</li>}\r\n            sx={{ width: 450 }}\r\n            freeSolo\r\n            renderInput={(params) => (\r\n              <div>\r\n                <Box sx={{ display: \"flex\", alignItems: \"flex-end\" }}>\r\n                  <SearchRoundedIcon\r\n                    sx={{ color: \"action.active\", mr: 1, my: 3.5 }}\r\n                  />\r\n                  {error && (\r\n                    <TextField\r\n                      {...params}\r\n                      error\r\n                      id=\"error\"\r\n                      label=\"Error\"\r\n                      helperText=\"This user has already been added\"\r\n                      size=\"small\"\r\n                      variant=\"standard\"\r\n                    />\r\n                  )}\r\n                  {!error && (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Search for name\"\r\n                      helperText=\"Please enter your name here :)\"\r\n                      size=\"small\"\r\n                      variant=\"standard\"\r\n                    />\r\n                  )}\r\n                </Box>\r\n              </div>\r\n            )}\r\n          />\r\n        </Stack>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {Initilize}\r\n      <Box sx={{textAlign: \"left\", m: 2}}>\r\n        <Button variant=\"contained\" onClick={handleClickOpen}>\r\n          +ADD\r\n        </Button>\r\n      </Box>\r\n      {nameInputDialog}\r\n      {userNameList.length !== 0 && (\r\n        <Paper variant=\"outlined\" sx={{ mt: 2, boxShadow: 1 }}>\r\n          <Paper  />\r\n          <List>\r\n            <TransitionGroup>\r\n              {nameInDisplay.map((item) => (\r\n                <Collapse key={item}>\r\n                  {(userNameList.indexOf(item) !== 0) && <Divider />}\r\n                  {renderItem({ item, handleRemoveName })}\r\n                </Collapse>\r\n              ))}\r\n            </TransitionGroup>\r\n          </List>\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NameInput;\r\n\r\n","import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport DateTimePicker from \"@mui/lab/DateTimePicker\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Snackbar from '@mui/material/Snackbar'; \r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n// This will be used to store input data\r\nvar StartTime;\r\nvar EndTime;\r\nvar unavailableRoom;\r\n\r\nfunction ISODateString(d) {\r\n  function pad(n) {\r\n    return n < 10 ? \"0\" + n : n;\r\n  }\r\n  if (d === null) return null;\r\n\r\n  console.log(d.getHours());\r\n\r\n  return (\r\n    d.getUTCFullYear() +\r\n    \"-\" +\r\n    pad(d.getUTCMonth() + 1) +\r\n    \"-\" +\r\n    pad(d.getDate()) +\r\n    \"T\" +\r\n    pad(d.getHours()) +\r\n    \":\" +\r\n    pad(d.getUTCMinutes()) +\r\n    \":\" +\r\n    \"00.000Z\"\r\n  );\r\n}\r\n\r\nfunction Add5Hours (time) {\r\n  var newTime = new Date(time);\r\n  if (newTime.getHours() > 18) {\r\n    newTime.setDate(newTime.getDate() + 1);\r\n    newTime.setHours(newTime.getHours() - 19);\r\n  } else {\r\n    newTime.setHours(newTime.getHours() + 5);\r\n  }\r\n  newTime = newTime.toISOString();\r\n  console.log(\"comparableTime:\", newTime);\r\n  return newTime;\r\n}\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" horizontal=\"center\" {...props} />;\r\n});\r\n\r\nexport default function DateTimeValidation({setTimeCorrect,\r\n                                            setStartTimeSelected, \r\n                                            setEndTimeSelected}) {\r\n  const [startValue, setSartValue] = React.useState(null);\r\n  const [endValue, setEndValue] = React.useState(null);\r\n  const [invalidTime, setInvalidTime] = React.useState(false);\r\n  const [invalidFormat, setInvalidFormat] = React.useState(false);\r\n\r\n  const handleFakeClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  }\r\n\r\n  const EndTimeCheck = () => {\r\n\r\n    //console.log(\"StartTime:\", StartTime);\r\n    //console.log(\"EndTime:\", EndTime);\r\n    /*\r\n    if (StartTime && EndTime) {\r\n    StartTime = Add5Hours(StartTime);\r\n    EndTime = Add5Hours(EndTime);\r\n    \r\n    }\r\n*/\r\n\r\n    if (StartTime === \"NaN-NaN-NaNTNaN:NaN:00.000Z\" || EndTime === \"NaN-NaN-NaNTNaN:NaN:00.000Z\") {\r\n      setInvalidFormat(true);\r\n      setTimeCorrect(false);\r\n    } \r\n    else { \r\n      setInvalidFormat(false);    \r\n\r\n      if (StartTime > EndTime) {\r\n        setInvalidTime(true);\r\n        setTimeCorrect(false);\r\n      }\r\n      else {\r\n        setInvalidTime(false);\r\n        setTimeCorrect(true);\r\n        setStartTimeSelected(StartTime);\r\n        setEndTimeSelected(EndTime);\r\n\r\n        console.log(\"StartTime:\", StartTime);\r\n        console.log(\"EndTime:\", EndTime);\r\n      }\r\n  \r\n    }\r\n    return (\r\n        <div>\r\n        {invalidTime && \r\n          <Snackbar open={invalidTime} autoHideDuration={10} onClose={handleFakeClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n          <Alert severity=\"error\">Proposed end time should not exceed start time!</Alert>\r\n          </Snackbar>\r\n        }\r\n        {invalidFormat && \r\n          <Snackbar open={invalidFormat} autoHideDuration={10} onClose={handleFakeClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n          <Alert severity=\"error\">Time format invalid!</Alert>\r\n          </Snackbar>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n      <Stack spacing={1}>\r\n        <div>\r\n          <FormControl sx={{ m: 1, width: 400 }}>\r\n            <DateTimePicker\r\n              clearable\r\n              placeholder=\"Enter time\"\r\n              renderInput={(params) => <TextField {...params} />}\r\n              label=\"Event start time\"\r\n              value={startValue}\r\n              onChange={(newValue) => {\r\n                setSartValue(newValue);    \r\n                StartTime = ISODateString(newValue);\r\n                if (StartTime !== \"NaN-NaN-NaNTNaN:NaN:00.000Z\")\r\n                    StartTime = Add5Hours(StartTime)\r\n                console.log(StartTime);\r\n                setTimeCorrect(false);\r\n              }}\r\n              minDate={new Date()}\r\n              minTime={new Date(0, 0, 0, 8)}\r\n              maxTime={new Date(0, 0, 0, 23, 59)}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div>\r\n          <FormControl sx={{ m: 1, width: 400 }}>\r\n            <DateTimePicker\r\n              renderInput={(params) => <TextField {...params} />}\r\n              label=\"Proposed end time\"\r\n              value={endValue}\r\n              onChange={(newValue) => {\r\n                setEndValue(newValue);\r\n                EndTime = ISODateString(newValue);\r\n                if (EndTime !== \"NaN-NaN-NaNTNaN:NaN:00.000Z\")\r\n                    EndTime = Add5Hours(EndTime);\r\n                console.log(EndTime);\r\n                setTimeCorrect(false);\r\n              }}\r\n              minTimeMessage\r\n              maxTimeMessage\r\n              minDate={new Date()}\r\n              minTime={new Date(0, 0, 0, 8)}\r\n              maxTime={new Date(0, 0, 0, 23, 59)}\r\n              clearable={true}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n      </Stack>\r\n      <EndTimeCheck />\r\n\r\n    </LocalizationProvider>\r\n\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormControl, { useFormControl } from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Snackbar from '@mui/material/Snackbar'; \r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n\r\n// This will be used to store input data\r\nvar userGear;\r\nvar unavailableGear;\r\n\r\nconst embedStyle = {\r\n  background: \"transparent\",\r\n  border: \"\"\r\n  \r\n};\r\n\r\nconst iFrameGear =(\r\n  <iframe class=\"airtable-embed\" \r\n                src=\"https://airtable.com/embed/shrmH9r8B0Zd8LwcU?backgroundColor=red\"\r\n                frameborder=\"0\"\r\n                sandbox=\"allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin\"\r\n                loading=\"lazy\"\r\n                onmousewheel=\"\"\r\n                width=\"100%\" \r\n                height=\"533\"\r\n                style={embedStyle}\r\n                \r\n            />\r\n);\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" horizontal=\"center\" {...props} />;\r\n  });\r\n\r\nexport default function GearCheckOut({setGearSelected, gearList, gear, setGear, startTimeSelected, endTimeSelected}) {\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n  const [gearUnavailable, setGearUnavailable] = React.useState(false);\r\n  const [successMsg, setSuccessMsg] = React.useState(false);\r\n\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      await sleep(1e3); // For demo purposes.\r\n\r\n      if (active) {\r\n        setOptions([...gearList]);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  const handleFakeClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n  }\r\n\r\n  const handleRealClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSuccessMsg(false);\r\n  }\r\n \r\n  const availabilityCheck = () => {\r\n    var gears = userGear;\r\n    var StartTime = startTimeSelected;\r\n    var EndTime = endTimeSelected;\r\n    console.log(gears);\r\n    console.log(startTimeSelected);\r\n    console.log(endTimeSelected);\r\n    if (gears && StartTime && EndTime) {\r\n      var realEndTime = new Date(EndTime);\r\n      realEndTime.setHours(realEndTime.getHours() + 1);\r\n      realEndTime = realEndTime.toISOString();\r\n      \r\n      var conflictFound = false;\r\n      console.log(\"test2\");\r\n      for (var i = 0; !conflictFound && (i < gears.length); i++) {\r\n        if (!gears[i].eventStart) continue;\r\n        for (var j = 0; !conflictFound && (j < gears[i].eventStart.length); j++){\r\n\r\n            // User selected time is covering and existing session \r\n            if ((StartTime <= gears[i].eventStart[j]) && (realEndTime >= gears[i].eventEnd[j])) {\r\n              conflictFound = true;\r\n              unavailableGear = gears[i].name;\r\n              break;\r\n            } \r\n            // User selected start time is during an existing session \r\n            else if ((StartTime >= gears[i].eventStart[j]) && (StartTime <= gears[i].eventEnd[j])) {\r\n              conflictFound = true;\r\n              unavailableGear = gears[i].name;\r\n              break;\r\n            }\r\n            // User selected end time is during an existing session \r\n            else if ((realEndTime >= gears[i].eventStart[j]) && (realEndTime <= gears[i].eventEnd[j])) {\r\n              conflictFound = true;\r\n              unavailableGear = gears[i].name;\r\n              break;\r\n            }\r\n        }\r\n      }\r\n  \r\n      if (conflictFound) {\r\n        setGearUnavailable(true);\r\n        setSuccessMsg(false);\r\n\r\n      } else {\r\n        setGearUnavailable(false);\r\n        setSuccessMsg(true);\r\n      }\r\n      \r\n    }\r\n  \r\n  };\r\n\r\n  const handleOnChange = (event, newValue) => {\r\n    if (typeof newValue === \"string\") {\r\n      setGear({\r\n        title: newValue\r\n      });\r\n    } else {\r\n      setGear(newValue);\r\n      userGear = newValue;\r\n      setGearSelected(newValue);\r\n      console.log(userGear);\r\n\r\n      // call function to check for availability\r\n      setGearUnavailable(false);\r\n      setSuccessMsg(false);\r\n      if (newValue.length !==0) availabilityCheck();\r\n\r\n    };\r\n  };\r\n\r\n\r\n  return (\r\n    <Stack spacing={0}>\r\n      <Box sx={{ display: \"flex\", alignItems: \"flex-start\", flexWrap: \"wrap\", justifyContent: 'center' }}>\r\n      <FormControl sx={{ m: 1, width: 400 }} variant=\"standard\">\r\n      <Autocomplete\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        multiple\r\n        freeSolo\r\n        disableCloseOnSelect\r\n        value={gear}\r\n        onChange={handleOnChange}\r\n        id=\"Search-for-course\"\r\n        options={options}\r\n        getOptionLabel={(option) => {\r\n          if (typeof option === \"string\") {\r\n            // Value selected with enter, right from the input\r\n            return option;\r\n          } else return option.name; // Regular option\r\n        }}\r\n        renderOption={(props, option, { selected }) => (\r\n          <li {...props}>\r\n            <Checkbox\r\n              icon={icon}\r\n              checkedIcon={checkedIcon}\r\n              style={{ marginRight: 8 }}\r\n              checked={selected}\r\n              sx={{\r\n                color: pink[800],\r\n                \"&.Mui-checked\": {\r\n                  color: pink[600]\r\n                }\r\n              }}\r\n            />\r\n            {option.name}\r\n          </li>\r\n        )}\r\n        renderInput={(params) => (\r\n          <TextField {...params} \r\n          variant=\"outlined\" \r\n          label=\"Add Gear(s)\" \r\n          helperText=\"Note: All gear at the SMC (and the Level needed to checkout) can be viewd below\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n          />\r\n        )}\r\n      ></Autocomplete>\r\n      <br />\r\n    </FormControl>\r\n    {iFrameGear}\r\n    {gearUnavailable && \r\n        <Snackbar open={gearUnavailable} autoHideDuration={10} onClose={handleFakeClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n        <Alert severity=\"error\">{unavailableGear} is not available at the inputted time!</Alert>\r\n        </Snackbar>\r\n      }\r\n      {successMsg && \r\n        <Snackbar open={successMsg} autoHideDuration={2000} onClose={handleRealClose} anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}>\r\n        <Alert severity=\"success\">Gear availability is good at inputted time</Alert>\r\n        </Snackbar>\r\n      }\r\n    </Box>\r\n    </Stack>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport TextField from '@mui/material/TextField';  \r\nimport NameInput from './NameInput'; \r\nimport CheckTwoToneIcon from '@mui/icons-material/CheckTwoTone';\r\nimport { styled } from \"@mui/styles\";\r\n\r\nvar eventID;\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: 'keyGJts1v9eIz3Dki'}).base('appqapwXvgL64Efox');\r\n//({apiKey: 'keyn6GGT4mwqMtlaF'}).base('appYke0X4d4wy6GUx'); // real base\r\n\r\n\r\nconst SubmitButton = styled(Button)({\r\n  background: \"linear-gradient(45deg, #ffd06a 30%, #fded2d 90%)\",\r\n  border: 0,\r\n  borderRadius: 4,\r\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n  color: \"white\",\r\n  height: 48,\r\n  padding: \"0 30px\"\r\n});\r\n\r\n\r\n//create global variables here\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"40%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  bgcolor: '#e7dcc8',\r\n  outline:0, \r\n  boxShadow: 20,\r\n  p: 4,\r\n  color: '#191b1d',\r\n};\r\n\r\nfunction CreateEventRecord(users,\r\n                           startTimeSelected,\r\n                           endTimeSelected,\r\n                           gears) {\r\n\r\n  base('Events').create([\r\n    {\r\n      \"fields\": {\r\n        \"Event Name\": \"Individual Gear Check Out\",\r\n        \"Start Time\": startTimeSelected,\r\n        \"Proposed End Time\": endTimeSelected,\r\n        \"Students\": users,\r\n        \"Status\": \"Booked ✅\",\r\n        \"Gear Selection\" : gears,\r\n      }\r\n    }\r\n  ], function(err, records) {\r\n    if (err) {\r\n      console.error(err);\r\n      return;\r\n    }\r\n    records.forEach(function (record) {\r\n        console.log(\"event table updated\");\r\n        return record.getId();\r\n    });\r\n  });\r\n\r\n}\r\n\r\nfunction CreateGearUseLogRecord(users,\r\n                                gears,\r\n                                eventID) {\r\n    base('Gear Use Log').create([\r\n        {\r\n            \"fields\": {\r\n            \"Person\": users,\r\n            \"Gear\": gears,\r\n            \"Event\": eventID\r\n            }\r\n        }\r\n        ], function(err, records) {\r\n        if (err) {\r\n            console.error(err);\r\n            return;\r\n        }\r\n        records.forEach(function (record) {\r\n            console.log(\"gear uas log updated\");\r\n        });\r\n        });\r\n}\r\n\r\n\r\n\r\nexport default function Submit({userSelected, \r\n                                startTimeSelected, \r\n                                endTimeSelected,\r\n                                gearSelected, \r\n                                timeCorrect\r\n                                }) {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n\r\n  const handleSubmit = () => {\r\n    setOpen(true);\r\n\r\n    // getting the IDs lists for linking fields\r\n    var users = [];\r\n    var gears = [];\r\n\r\n    if (userSelected) {\r\n      userSelected.forEach(function(obj){\r\n          users.push(obj.id);\r\n      })\r\n    }\r\n    if (gearSelected) {\r\n      gearSelected.forEach(function(obj){\r\n        gears.push(obj.id);\r\n      })\r\n    }\r\n\r\n    // create record\r\n    CreateEventRecord(users,\r\n                      startTimeSelected,\r\n                      endTimeSelected,\r\n                      gears);\r\n    console.log(\"checking error\");\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n\r\n    // slose the confirmation page\r\n    setOpen(false); \r\n    window.location.reload();\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <SubmitButton \r\n      variant=\"contained\" \r\n      disabled={!(endTimeSelected && startTimeSelected && timeCorrect) || gearSelected.length === 0 || userSelected.length === 0}\r\n      onClick={handleSubmit}>\r\n        SUBMIT\r\n      </SubmitButton>   \r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Submission Successful!\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            Please check your inbox for booking confirmation.\r\n          </Typography>\r\n        </Box>\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport IndividualNameInput from '../components/form/IndividualNameInput';\r\nimport IndividualTimeInput from '../components/form/IndividualTimeInput';\r\nimport IndividualGearCheckOut from '../components/form/IndividualGearCheckOut';\r\nimport IndividualSubmit from '../components/form/IndividualSubmit';\r\n\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from \"@mui/material/Box\";\r\nimport Grow from '@mui/material/Grow';\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\n\r\n///////////////////////////////////////////             ///////////////////////////////////////////\r\n///////////////////////////////////////////  API CALLS  ///////////////////////////////////////////\r\n///////////////////////////////////////////             ///////////////////////////////////////////\r\n\r\nvar Airtable = require('airtable');\r\nvar base = new Airtable({apiKey: 'keyGJts1v9eIz3Dki'}).base('appqapwXvgL64Efox');\r\n\r\nconst peopleAllInfo = [];\r\n\r\nvar x=0;\r\n///////////////////////Pulling records from SMC People///////////////////////\r\nbase('SMC People').select({\r\n    view: \"ALL PEOPLE\"\r\n}).eachPage(function page(records, fetchNextPage) {\r\n    // This function (`page`) will get called for each page of records.\r\n\r\n    records.forEach(function(record) {\r\n      \r\n      peopleAllInfo[x] = {id: record.id, name: record.get('Person'), gearAccess: record.get('Gear Access')} ;\r\n      x=x+1;\r\n\r\n        //console.log(x,'Retrieved', record.get('Person'), record)\r\n        //console.log(x,'Retrieved', record.get('Person'), record.get('Room Access'), record.get('Gear Access'));\r\n    });\r\n\r\n    // To fetch the next page of records, call `fetchNextPage`.\r\n    // If there are more records, `page` will get called again.\r\n    // If there are no more records, `done` will get called.\r\n    fetchNextPage();\r\n\r\n}, function done(err) {\r\n    if (err) { console.error(err); return; }\r\n});\r\n\r\n\r\nfunction Gear() {\r\n\r\n    const [userSelected, setUserSelected] = React.useState([]); \r\n    const [gear, setGear] = React.useState([]);\r\n    const [gearList, setGearList] = React.useState([]);\r\n    const [gearSelected, setGearSelected] = React.useState([]); \r\n    const [startTimeSelected, setStartTimeSelected] = React.useState(\"\"); \r\n    const [endTimeSelected, setEndTimeSelected] = React.useState(\"\"); \r\n\r\n    const [timeCorrect, setTimeCorrect] = React.useState(false);\r\n\r\n    const nameInput = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2}}>\r\n        <Box sx={{ textAlign: \"left\", m: 2, fontSize: 22, lineHeight: 2}}>\r\n          Who's booking?\r\n        <br />\r\n        <FormLabel component=\"legend\">\r\n        Add users to see a list of gear available to your access level in the Select Gear menu.\r\n        </FormLabel>\r\n        </Box>\r\n        <IndividualNameInput\r\n        peopleAllInfo={peopleAllInfo} \r\n        setUserSelected={setUserSelected} userSelected={userSelected}\r\n        setGearList={setGearList}\r\n        />\r\n      </Paper>  \r\n        \r\n    );\r\n\r\n    const timeInput = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n      <Box sx={{ textAlign: \"left\", m: 2, fontSize: 22, lineHeight: 2}}>  \r\n        Session Time\r\n        <FormLabel component=\"legend\">\r\n        Based on the your chosen Session Time, we wil notify you with the availability of the room(s) selected above. \r\n        </FormLabel>\r\n      </Box>\r\n      <IndividualTimeInput \r\n      setStartTimeSelected={setStartTimeSelected}\r\n      setEndTimeSelected={setEndTimeSelected}\r\n      setTimeCorrect={setTimeCorrect}\r\n      />\r\n      <br />\r\n      </Paper>\r\n    );\r\n\r\n    const gearInput = (\r\n      <Paper sx={{ maxWidth: 700, width: \"90%\", my: 2, mx: 'auto', p: 2 }}>\r\n      <Box sx={{ textAlign: \"left\", m: 2, fontSize: 22, lineHeight: 2}}>\r\n          Select Gear\r\n        <br />\r\n      </Box>\r\n      <IndividualGearCheckOut \r\n      setGearSelected={setGearSelected}\r\n      gearList={gearList}\r\n      gear={gear} setGear={setGear}\r\n      startTimeSelected={startTimeSelected}\r\n      endTimeSelected={endTimeSelected}\r\n      />\r\n      <br />\r\n      </Paper>\r\n    );\r\n\r\n    return(  \r\n\r\n        <div>\r\n          <Grow in={true}>{nameInput}</Grow>\r\n          <Grow in={true}>{timeInput}</Grow>\r\n          <Grow in={true}>{gearInput}</Grow>\r\n          \r\n          <IndividualSubmit\r\n          userSelected={userSelected} \r\n          startTimeSelected={startTimeSelected} \r\n          endTimeSelected={endTimeSelected} \r\n          gearSelected={gearSelected} \r\n          timeCorrect={timeCorrect} \r\n          />\r\n        </div>\r\n    ) \r\n  \r\n}\r\n\r\nexport default Gear","import React from 'react'\r\nimport {useSpring, animated} from 'react-spring';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst noteStyle = {\r\n    background: '#CFB991',\r\n    color: '#3b3e43',\r\n    padding: '1.5rem'\r\n}\r\n\r\nfunction SlideMessageContact() {\r\n\r\n    const slideStyle = useSpring({\r\n        from: {\r\n            opacity: 0,\r\n            marginLeft:-500\r\n        },\r\n        to:{\r\n            opacity: 1,\r\n            marginLeft:0\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n    <animated.div style={slideStyle}>\r\n        <div style={noteStyle}>\r\n            <h1>\r\n                Contact Us\r\n            </h1>\r\n            <h3>\r\n                See below for information on getting in contact with John Buteyn...\r\n            </h3>\r\n        </div>\r\n    </animated.div>\r\n    </Grid>\r\n           \r\n    )\r\n}\r\n\r\nexport default SlideMessageContact\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SlideMessageContact from '../components/slideMessageContact';\r\n\r\n\r\nimport '../fade-styles.css';\r\n\r\nfunction FadeInSection(props) {\r\n  const [isVisible, setVisible] = React.useState(false);\r\n  const domRef = React.useRef();\r\n  React.useEffect(() => {\r\n    const observer = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => setVisible(entry.isIntersecting));\r\n    });\r\n    observer.observe(domRef.current);\r\n  }, []);\r\n  return (\r\n    <div\r\n      className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\r\n      ref={domRef}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Fades() {\r\n  return (\r\n    <div className=\"FadeStyles\">\r\n        <SlideMessageContact/>\r\n      \r\n        <FadeInSection>\r\n          <div className=\"box\" style={{ backgroundColor: 'transparent' }}>\r\n            <h1>For Nonurgent Matters:</h1>\r\n          </div>\r\n        </FadeInSection>\r\n\r\n        {//     Link to calendly\r\n        }\r\n        <FadeInSection key={'#f8e3a1'}>\r\n          <div className=\"box\" style={{ backgroundColor: '#f8e3a1' }}>\r\n              <div className=\"grow\">\r\n\r\n                <a href=\"https://calendly.com/johnmbuteyn\" style={{textDecoration:\"none\"}}>\r\n                <img src=\"https://img.icons8.com/color/48/000000/calendar--v3.png\"/>\r\n                \r\n                <h2>\r\n                    Schedule Time\r\n                </h2>\r\n                <h3>\r\n                    Meet in person or over the web\r\n                </h3>\r\n                </a>\r\n              </div>\r\n            </div>\r\n        </FadeInSection>\r\n        \r\n        {//     Link to Slack DM\r\n        }\r\n\r\n        <FadeInSection key={'#f8e3a1'}>\r\n        <div className=\"box\" style={{ backgroundColor: '#f8e3a1' }}>\r\n            <div className=\"grow\">\r\n                <a href=\"https://pfwpopularmusic.slack.com/archives/D0189HCR6AF\" style={{textDecoration:\"none\"}}>\r\n                    <img src=\"https://img.icons8.com/color/48/000000/slack-new.png\"/>\r\n                    <h2>\r\n                        DM in Slack\r\n                    </h2>\r\n                    <h3>\r\n                        Typically responds within 12 hours\r\n                    </h3>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        </FadeInSection>\r\n\r\n        {//     Email\r\n        }\r\n        <FadeInSection key={'#f8e3a1'}>\r\n        <div className=\"box\" style={{ backgroundColor: '#f8e3a1' }}>\r\n            <div className=\"grow\">\r\n                <a href=\"mailto:jbuteyn@pfw.edu\" style={{textDecoration:\"none\"}}>\r\n                    <img src=\"https://img.icons8.com/external-sbts2018-flat-sbts2018/58/000000/external-email-social-media-basic-1-sbts2018-flat-sbts2018.png\"/>\r\n                    <h2>\r\n                        Send an email\r\n                    </h2>\r\n                    <h3>\r\n                        Typically responds within 24 hours\r\n                    </h3>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        </FadeInSection>\r\n\r\n\r\n        <FadeInSection key={'transparent'}>\r\n          <div className=\"box\" style={{ backgroundColor: 'transparent' }}>\r\n            <h1>For Urgent Matters:</h1>\r\n          </div>\r\n        </FadeInSection>\r\n\r\n        {//     Call\r\n        }\r\n        <FadeInSection key={'#f8e3a1'}>\r\n          <div className=\"box\" style={{ backgroundColor: '#f8e3a1' }}>\r\n              <div className=\"grow\">\r\n\r\n                <a href=\"tel:17315405539\" style={{textDecoration:\"none\"}}>\r\n                <img src=\"https://img.icons8.com/nolan/58/phone.png\"/>\r\n                \r\n                <h2>\r\n                    (731) 540-5539\r\n                </h2>\r\n                <h3>\r\n                    I'll call back if I'm unavailable\r\n                </h3>\r\n                </a>\r\n              </div>\r\n            </div>\r\n        </FadeInSection>\r\n\r\n        {//Slack emercgency DM\r\n        }\r\n        <FadeInSection key={'#f8e3a1'}>\r\n        <div className=\"box\" style={{ backgroundColor: '#f8e3a1' }}>\r\n            <div className=\"grow\">\r\n                <a href=\"https://studentopportunity.slack.com/archives/D018UKRHMB2\" style={{textDecoration:\"none\"}}>\r\n                    <img src=\"https://img.icons8.com/color/48/000000/slack-new.png\"/>\r\n                    <h2>\r\n                        Emergency DM in Slack\r\n                    </h2>\r\n                    <h3>\r\n                        Typically responds within 6 hours\r\n                    </h3>\r\n                </a>\r\n            </div>\r\n        </div>\r\n        </FadeInSection>\r\n\r\n        {//     Text\r\n        }\r\n        <FadeInSection key={'#f8e3a1'}>\r\n          <div className=\"box\" style={{ backgroundColor: '#f8e3a1' }}>\r\n              <div className=\"grow\">\r\n\r\n                <a href=\"sms:/17315405539/&body=/ /\" style={{textDecoration:\"none\"}}>\r\n                <img src=\"https://img.icons8.com/color/58/000000/messaging-.png\"/>\r\n                \r\n                <h2>\r\n                    (731) 540-5539\r\n                </h2>\r\n                <h3>\r\n                    I'll call back if I'm unavailable\r\n                </h3>\r\n                </a>\r\n              </div>\r\n            </div>\r\n        </FadeInSection>\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import * as React from 'react'; \r\nimport { createTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles'\r\nimport './App.css';\r\nimport CustomBtn from './components/customBtn';\r\nimport NavBar from './components/navBar';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport home from './pages/home';\r\nimport schedules from './pages/schedules'\r\nimport gear from './pages/gear'\r\nimport contact from './pages/contact'\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#e8d6c0\"\r\n    },\r\n    primary: {\r\n      main:\"#2e1667\",\r\n    },\r\n    secondary: {\r\n      main:\"#c7d8ed\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Roboto'\r\n    ],\r\n    h4: {\r\n      fontWeight: 600,\r\n      fontSize: 28,\r\n      lineHeight: '2rem',\r\n      },\r\n    h5: {\r\n      fontWeight: 100,\r\n      lineHeight: '2rem',\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      \"@global\": {\r\n        body: {\r\n          backgroundImage:\r\n            \"url(https://brand.pfw.edu/sites/default/files/inline-images/PFW%20Brand%20Site_Visual%20Elements_26.jpg)\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n\r\n    <Router>\r\n      <div className=\"App\">\r\n      \r\n      <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <NavBar/>\r\n        \r\n        <Switch>\r\n          <Route path = \"/\" exact component={home}/>\r\n          <Route path = \"/schedules\" exact component={schedules}/>\r\n          <Route path = \"/gear\" exact component={gear}/>\r\n          <Route path = \"/contact\" exact component={contact}/>\r\n        </Switch>\r\n    \r\n      </ThemeProvider>\r\n      \r\n      </div>\r\n    </Router>\r\n      \r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}